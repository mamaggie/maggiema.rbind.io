<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blogdown | Maggie Ma</title>
    <link>https://maggie-98.github.io/categories/blogdown/</link>
      <atom:link href="https://maggie-98.github.io/categories/blogdown/index.xml" rel="self" type="application/rss+xml" />
    <description>blogdown</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© Maggie Ma 2021</copyright><lastBuildDate>Thu, 31 Dec 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://maggie-98.github.io/img/pom-card.png</url>
      <title>blogdown</title>
      <link>https://maggie-98.github.io/categories/blogdown/</link>
    </image>
    
    <item>
      <title>Up &amp; running with blogdown in 2021</title>
      <link>https://maggie-98.github.io/post/new-year-new-blogdown/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://maggie-98.github.io/post/new-year-new-blogdown/</guid>
      <description>


&lt;h2 id=&#34;welcome&#34;&gt;Welcome&lt;a href=&#34;#welcome&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Hi! Hello! Welcome. Bienvenidos.&lt;/p&gt;
&lt;p&gt;About 3.5 years ago, I wrote my 
&lt;a href=&#34;https://maggie-98.github.io/post/2017-06-12-up-and-running-with-blogdown/&#34;&gt;first blog post&lt;/a&gt; and published it on my first website. Since then, that single post has been viewed over 27,557 times. That may not seem like a lot to some folks, but it is to me! Even more meaningful to me, though, has been watching the launches of so many people&amp;rsquo;s personal websites.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/BU5j1oVls8rXG/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;However, the process of creating and maintaining a Hugo website using blogdown was not always pain-free. Sometimes we have Hugo &amp;ldquo;improvements&amp;rdquo; to thank, other times your Hugo theme is at fault, and sometimes we could blame blogdown. Regardless of where the pain came from, there was definitely room for improvement.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/KTyJ3VPxkbDKU/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here are some great blog posts that document pretty common user experiences and frustrations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://masalmon.eu/2020/02/29/hugo-maintenance/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Maëlle Salmon&amp;rsquo;s post: &lt;em&gt;What to know before you adopt Hugo/blogdown&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://drmowinckels.io/blog/2020-05-25-changing-you-blogdown-workflow/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Athanasia Mowinckel&amp;rsquo;s post: &lt;em&gt;Changing your blogdown workflow&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://clauswilke.com/blog/2020/09/08/a-blogdown-post-for-the-ages/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Claus Wilke&amp;rsquo;s post: &lt;em&gt;Writing a blogdown post for the ages&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of this, combined with my own experiences teaching and using blogdown for over 3.5 years led me to&amp;hellip;my giant blogdown wishlist. I had a lot of ideas to help beginners get started, but just as important, to improve the quality of life for existing users. You can see my mega-wishlist that Yihui Xie (the blogdown conceptor and author) asked me to share with him: &lt;a href=&#34;https://github.com/rstudio/blogdown/issues/476&#34;&gt;https://github.com/rstudio/blogdown/issues/476&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m very happy to report that our team has been working very hard to address these issues, and many others raised by users, to make blogdown easier to learn and use. Just in time for the new year, we have a new and improved release of the blogdown package for you to test. I know a lot of folks are itching to introduce themselves into online communities and conversations, so I thought it would be fun to take my original blogdown post, and trace the same process of building a Hugo website with the same theme (now named 
&lt;a href=&#34;https://wowchemy.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;Wowchemy&amp;rdquo;&lt;/a&gt; instead of Hugo Academic- don&amp;rsquo;t get me started).&lt;/p&gt;
&lt;p&gt;So if you are feeling fearless and want to live on the bleeding edge, read on to give the development version of blogdown a spin along with me.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/42zi6wvKUbXHbzwBbD/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;



&lt;h2 id=&#34;tldr&#34;&gt;tl;dr&lt;a href=&#34;#tldr&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;If you already know what you are doing, this entire post can be condensed into just a few lines of code:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;remotes::install_github(&amp;quot;rstudio/blogdown&amp;quot;)
usethis::create_project()
blogdown::new_site(theme = &amp;quot;wowchemy/starter-academic&amp;quot;)
blogdown::serve_site()
blogdown::new_post(title = &amp;quot;Hi Hugo&amp;quot;, 
                     ext = &#39;.Rmarkdown&#39;, 
                     subdir = &amp;quot;post&amp;quot;)
usethis::use_git()
usethis::use_github() # requires a GitHub PAT
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The above sequence is a slightly more advanced workflow than the steps I follow below, but is fairly magical- attempt at your own risk! For everyone else, read on&amp;hellip;&lt;/p&gt;



&lt;h2 id=&#34;pre-requisites&#34;&gt;Pre-requisites&lt;a href=&#34;#pre-requisites&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Getting any website up and running with all the moving parts (RStudio, GitHub, Hugo, Netlify) can take a few tries. In this post, I&amp;rsquo;m passing along what works for me, and the workflow that I use when I teach Hugo website development. Everyone&amp;rsquo;s mileage may vary, though, depending on your operating system and your approach.&lt;/p&gt;
&lt;p&gt;For this blog post, I&amp;rsquo;m assuming you have basic familiarity with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;R,&lt;/li&gt;
&lt;li&gt;the RStudio IDE, and&lt;/li&gt;
&lt;li&gt;GitHub.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If that is not you, you will need to work through 
&lt;a href=&#34;http://happygitwithr.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Happy Git with R&lt;/a&gt; by Jenny Bryan et al. first, then come back here when you are ready.&lt;/p&gt;
&lt;p&gt;Since the development version of blogdown is currently only available on GitHub, you may need to setup a 
&lt;a href=&#34;https://happygitwithr.com/github-pat.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Personal Access Token&lt;/a&gt; to install it.&lt;/p&gt;
&lt;p&gt;In my original 2017 post, I mentioned that at that time, I was a new mom, and just in the process of writing all that up, I filled up my tea mug twice with ice cold water, and filled my water bottle with scalding hot water. This time around isn&amp;rsquo;t too different! Fast forward to 2020: there is a global pandemic, I&amp;rsquo;ve been under stay-at-home orders with a child under 5 years of age at home for months. So buckle up 🤠&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/Q9vJgdNPoyKSA6APDo/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    I&amp;rsquo;ve included code chunks below using the &lt;a href=&#34;https://rstudio.github.io/rstudioapi/&#34;&gt;rstudioapi&lt;/a&gt; package to help you navigate to the right file at the right time. Hugo sites have a dizzying and heavily nested directory structure! You&amp;rsquo;ll need to run &lt;code&gt;install.packages(&amp;quot;rstudioapi&amp;quot;)&lt;/code&gt; to use those code chunks, but you can also navigate on your own to the file you need too.
  &lt;/div&gt;
&lt;/div&gt;



&lt;h2 id=&#34;step-0-set-your-intentions&#34;&gt;Step 0: Set your intentions&lt;a href=&#34;#step-0-set-your-intentions&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;00-blogdown-2021.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;During workshops, I try to set aside some time at the start for folks to set their website intentions. This might feel a bit like navel-gazing, but trust me here. I know you just want to jump in and get started!&lt;/p&gt;
&lt;p&gt;Hear me out though, and don&amp;rsquo;t skim or skip this step. The process of actually building and deploying a personal site can be complicated, and it is easy to get lost in the weeds.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/l3vRbcJ60KOxd9bVu/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;It is very easy to run out of steam when it is time to do the most fun and important piece: dreaming about the kind of site you want to make!&lt;/p&gt;
&lt;div class=&#34;alert alert-todo&#34;&gt;
  &lt;div&gt;
    Do this right now! Take 10 minutes to set your website intentions&amp;mdash;grab a pen and notepad and a cup of 🍵 and read on&amp;hellip;
  &lt;/div&gt;
&lt;/div&gt;



&lt;h3 id=&#34;todo-content&#34;&gt;1. Content&lt;a href=&#34;#todo-content&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Hugo is made for blogs. But, in addition to a blog, the starter-academic theme provides a unique system of widgets. You can have one or many widgets on pages in your site. I like to think of widgets like 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Mr._Potato_Head&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mr. Potato Head&lt;/a&gt; where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Each page is a potato head, and&lt;/li&gt;
&lt;li&gt;Each widget is a piece you could place on the potato head.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/tjGVkrPMjngt2/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Take the homepage for example, seen on the 
&lt;a href=&#34;https://academic-demo.netlify.app/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic demo site&lt;/a&gt;. Each band or section you see is a widget. Widgets can be stand-alone pages, or can be combined on a single page.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Multiple widget page: my 
&lt;a href=&#34;https://maggie-98.github.io/resume/&#34;&gt;resume&lt;/a&gt; and 
&lt;a href=&#34;https://maggie-98.github.io/about/&#34;&gt;about&lt;/a&gt; pages&lt;/li&gt;
&lt;li&gt;Single widget page: my 
&lt;a href=&#34;https://maggie-98.github.io/projects/&#34;&gt;projects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-todo&#34;&gt;
  &lt;div&gt;
    Look at the &lt;a href=&#34;https://academic-demo.netlify.app/&#34;&gt;Academic demo site&lt;/a&gt; and write down some widgets you see that you like, and the ones you definitely don&amp;rsquo;t.
  &lt;/div&gt;
&lt;/div&gt;



&lt;h3 id=&#34;todo-menu&#34;&gt;2. Menu&lt;a href=&#34;#todo-menu&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Now that you have a sense of the content you want, how do you want a visitor to be able to explore your content? I typically recommend limiting the top navbar to 5 links max (excluding the search icon).&lt;/p&gt;
&lt;p&gt;Use some of my favorite personal sites (that do not use our theme) as inspiration too:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jason.af/&#34;&gt;https://www.jason.af/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nistara.net&#34;&gt;https://www.nistara.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://third-bit.com/&#34;&gt;https://third-bit.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://maggieappleton.com/&#34;&gt;https://maggieappleton.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.drcathicks.com/&#34;&gt;https://www.drcathicks.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://amber.rbind.io/&#34;&gt;https://amber.rbind.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dscott.netlify.app/&#34;&gt;https://dscott.netlify.app/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://drmowinckels.io/&#34;&gt;https://drmowinckels.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Think about how the menu &amp;ldquo;prewires&amp;rdquo; you to know what to expect as you dig deeper into their site. How do you want people to get to know you online?&lt;/p&gt;
&lt;div class=&#34;alert alert-todo&#34;&gt;
  &lt;div&gt;
    Write down up to 5 items to appear in your upper navbar.
  &lt;/div&gt;
&lt;/div&gt;



&lt;h3 id=&#34;todo-home&#34;&gt;3. Homepage&lt;a href=&#34;#todo-home&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;This is the first page a visitor lands on when they find your site. Think of it like a welcome mat. Do you like a single page site where you scroll and see everything on one page? Or do you prefer a short and sweet homepage? Do you want a photo and a bio to be the first thing visitors see? What else?&lt;/p&gt;
&lt;p&gt;Here are some examples of personal websites built with the Hugo Academic theme to inspire you:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://malco.io/&#34;&gt;https://malco.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://isabella-b.com/&#34;&gt;https://isabella-b.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.connorrothschild.com/&#34;&gt;https://www.connorrothschild.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://silvia.rbind.io/&#34;&gt;https://silvia.rbind.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://maya.rbind.io/&#34;&gt;https://maya.rbind.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.allisonhorst.com/&#34;&gt;https://www.allisonhorst.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://juliasilge.com/&#34;&gt;https://juliasilge.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://desiree.rbind.io/&#34;&gt;https://desiree.rbind.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-todo&#34;&gt;
  &lt;div&gt;
    Write down the widgets you want to see on your homepage. It can be one, or many.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;OK, keep these notes handy! We are ready to &lt;em&gt;make something.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/mXqtfNsJlKtAoyLHd4/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;



&lt;h2 id=&#34;step-1-create-repo&#34;&gt;Step 1: Create repo&lt;a href=&#34;#step-1-create-repo&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;01-blogdown-2021.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Go online to your 
&lt;a href=&#34;https://github.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt; account, and create a new repository (check to initialize with a &lt;code&gt;README&lt;/code&gt; but don&amp;rsquo;t add &lt;code&gt;.gitignore&lt;/code&gt;- this will be taken care of later). For naming your repo, consider your future deployment plan:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;github-new-repo.png&#34; alt=&#34;Screenshot above: Creating a new repository in GitHub&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.netlify.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Netlify&lt;/strong&gt;&lt;/a&gt;. I recommend using Netlify to &lt;em&gt;both&lt;/em&gt; build and host your site. In this case, you can name the repository anything you want!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://pages.github.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;GitHub Pages&lt;/strong&gt;&lt;/a&gt;. I recommend Netlify over GitHub Pages for blogdown/Hugo sites. But, if you want to host your site with GitHub Pages, you should name your repository &lt;code&gt;yourgithubusername.github.io&lt;/code&gt; (so mine would have been &lt;code&gt;apreshill.github.io&lt;/code&gt;). This post won&amp;rsquo;t be able to help you with publishing.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    You can see some of the repo names used by members of the &lt;code&gt;rbind&lt;/code&gt; organization &lt;a href=&#34;https://github.com/rbind/repositories&#34;&gt;here&lt;/a&gt;.
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;Go to the main page of your new repository, and under the repository name, click the green &lt;strong&gt;Clone or download&lt;/strong&gt; button.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choose either SSH or HTTPS (if you don&amp;rsquo;t know which, choose HTTPS). Choose by clicking on the clipboard icon to copy the remote URL for your new repository. You&amp;rsquo;ll paste this text into RStudio in the next section.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;



&lt;h2 id=&#34;step-2-create-project&#34;&gt;Step 2: Create project&lt;a href=&#34;#step-2-create-project&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;02-blogdown-2021.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;We just created the remote repository on GitHub. To make a local copy on our computer that we can actually work in, we&amp;rsquo;ll clone that repository into a new RStudio project. This will allow us to sync between the two locations: your remote (the one you see on github.com) and your local desktop.&lt;/p&gt;
&lt;p&gt;Open up RStudio to create a new project where your website&amp;rsquo;s files will live.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;code&gt;File &amp;gt; New Project &amp;gt; Version Control &amp;gt; Git&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Paste the copied URL from the previous step.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be intentional about where you tell RStudio to create this new Project on your workstation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;strong&gt;Create Project&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;



&lt;h2 id=&#34;step-3-create-site&#34;&gt;Step 3: Create site&lt;a href=&#34;#step-3-create-site&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;03-blogdown-2021.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The latest version of blogdown will not be available on CRAN until January 2021, but you can install the development version from GitHub with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; if (!requireNamespace(&amp;quot;remotes&amp;quot;)) install.packages(&amp;quot;remotes&amp;quot;)
&amp;gt; remotes::install_github(&amp;quot;rstudio/blogdown&amp;quot;)
Using github PAT from envvar GITHUB_PAT
Downloading GitHub repo rstudio/blogdown@master
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Let&amp;rsquo;s use our first blogdown function to create a website with the Hugo Wowchemy &amp;ldquo;starter-academic&amp;rdquo; project:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; library(blogdown)
&amp;gt; new_site(theme = &amp;quot;wowchemy/starter-academic&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You should now see something like this. Take a moment to read through these messages - importantly, it tells you how to start and stop the server so you can preview your site. Importantly, when you come back to your project, note that you can use &lt;code&gt;blogdown::serve_site()&lt;/code&gt; or the &amp;ldquo;Serve Site&amp;rdquo; addin to preview it locally.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new_hugo_start.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s select &lt;code&gt;y&lt;/code&gt; to let blogdown start a server for us.&lt;/p&gt;
&lt;p&gt;Exciting, isn&amp;rsquo;t it? Now, don&amp;rsquo;t trap your site in the RStudio Viewer pane. Let it out! Click to &amp;ldquo;Show in new window&amp;rdquo; (to the right of the 🧹 icon) to preview it in a normal browser window. When you do that, you&amp;rsquo;ll be re-directed to the site&amp;rsquo;s main homepage. Let&amp;rsquo;s find our way back to the R Markdown post. Click on &lt;code&gt;Posts &amp;gt; Hello R Markdown&lt;/code&gt; to read it:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;sample_post.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is what blogdown gives you- everything else in the site is given to you by Hugo and your Wowchemy Hugo theme. But this post, and your ability to see output and plots rendered with &lt;i class=&#34;fab fa-r-project&#34;&gt;&lt;/i&gt; is what blogdown adds!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;



&lt;h2 id=&#34;step-4-create-content&#34;&gt;Step 4: Create content&lt;a href=&#34;#step-4-create-content&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;04-blogdown-2021.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s use more R Markdown 🎉&lt;/p&gt;
&lt;p&gt;Blogdown allows you to create new two kinds of R Markdown posts that are knittable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.Rmd&lt;/code&gt; 🧶 to &lt;code&gt;.html&lt;/code&gt; or&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.Rmarkdown&lt;/code&gt; 🧶 to &lt;code&gt;.markdown&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once knitted, both are then previewable in your Hugo site.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    I used to agonize over which file extension to use. But now I am squarely in &lt;code&gt;.Rmarkdown&lt;/code&gt; camp with &lt;a href=&#34;https://masalmon.eu/2020/02/29/hugo-maintenance/&#34;&gt;Maëlle&lt;/a&gt;- I like knitting to &lt;code&gt;.markdown&lt;/code&gt; and wish this was easier in blogdown; see: &lt;a href=&#34;https://github.com/rstudio/blogdown/issues/530&#34;&gt;https://github.com/rstudio/blogdown/issues/530&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Use the console to author a new &lt;code&gt;.Rmarkdown&lt;/code&gt; post; I&amp;rsquo;ll name my post &amp;ldquo;Hi Hugo&amp;rdquo;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; blogdown::new_post(title = &amp;quot;Hi Hugo&amp;quot;, 
                     ext = &#39;.Rmarkdown&#39;, 
                     subdir = &amp;quot;post&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This takes the path to where you want your post to live, relative to the &lt;code&gt;content/&lt;/code&gt; folder (so that piece of the path is assumed, rightly so!). In the Academic theme, the example site organizes blog posts into the &lt;code&gt;content/post/&lt;/code&gt; folder, but the name of this folder varies across Hugo themes.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    A rule that is true 90% of the time: folders in &lt;code&gt;content/&lt;/code&gt; are singular, not plural&amp;mdash; ✔️ &lt;code&gt;post&lt;/code&gt;; ❌ &lt;code&gt;posts&lt;/code&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You can add an option to your &lt;code&gt;.Rprofile&lt;/code&gt; to save these settings so you don&amp;rsquo;t have to remember them:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# if exists, opens; if not, creates new
blogdown::config_Rprofile() 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then add the blogdown options to that file, save, and &lt;strong&gt;RESTART YOUR R SESSION&lt;/strong&gt; for changes to take effect:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;options(
  # to automatically serve the site on RStudio startup, set this option to TRUE
  blogdown.serve_site.startup = FALSE,
  # to disable knitting Rmd files on save, set this option to FALSE
  blogdown.knit.on_save = FALSE     &amp;lt;- change
  blogdown.author = &amp;quot;Alison Hill&amp;quot;,  &amp;lt;- add
  blogdown.ext = &amp;quot;.Rmarkdown&amp;quot;,      &amp;lt;- add
  blogdown.subdir = &amp;quot;post&amp;quot;          &amp;lt;- add
)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    Always restart your R session after editing your &lt;code&gt;.Rprofile&lt;/code&gt; for changes to take effect. Don&amp;rsquo;t forget to run &lt;code&gt;serve_site()&lt;/code&gt; after a restart.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you look in your &lt;strong&gt;Files&lt;/strong&gt; pane, you can see that this creates a folder with the date and the 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Clean_URL#Slug&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;slug&amp;rdquo;&lt;/a&gt; name of my post (&lt;code&gt;&amp;quot;hi-hugo&amp;quot;&lt;/code&gt;). The actual R Markdown file is named &lt;code&gt;index.Rmarkdown&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new_post.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is a Hugo 
&lt;a href=&#34;https://maggie-98.github.io/post/2019-02-21-hugo-page-bundles/&#34;&gt;page bundle&lt;/a&gt;. Each post gets its own bundle, or folder. Inside the post bundle is where all your static images, static data files like &lt;code&gt;.csv&lt;/code&gt; files should go.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;content/
├── posts
│   ├── 2021-01-01-hi-hugo
│   │   ├── bakers.csv
│   │   ├── image1.jpg
│   │   ├── image2.png
│   │   └── index.Rmarkdown
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the post itself, use the relative file path like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;![my-first-image](image1.jpg)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let&amp;rsquo;s look at the &lt;code&gt;index.Rmarkdown&lt;/code&gt;. We&amp;rsquo;ll knit this &lt;code&gt;.Rmarkdown&lt;/code&gt; to a &lt;code&gt;.markdown&lt;/code&gt; file. You may 🧶 knit 🧶 freely now in blogdown!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/iBjylURwS9N9FCl8Dl/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;To knit an &lt;code&gt;.Rmarkdown&lt;/code&gt; post, you can either:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use the Knit button to knit to the correct output format, or&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the keyboard shortcut &lt;code&gt;Cmd+Shift+K&lt;/code&gt; (Mac) or &lt;code&gt;Ctrl+Shift+K&lt;/code&gt; (Windows/Linux).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After knitting, you should now see:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;content/
├── posts
│   ├── hi-hugo
│   │   ├── bakers.csv
│   │   ├── image1.jpg
│   │   ├── image2.png
│   │   ├── index.Rmarkdown
│   │   └── index.markdown   &amp;lt;- 🆕
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Go ahead and add an R code chunk like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```{r}
summary(Orange)
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After you edit your &lt;code&gt;.Rmarkdown&lt;/code&gt; post, knit. Note that knitting automatically saves the file for you. You also can just save the file without knitting- this is good for when your code still needs work and won&amp;rsquo;t run as is.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    The most important thing here is to realize that the act of knitting creates an &lt;code&gt;index.markdown&lt;/code&gt; file in the same post bundle as &lt;code&gt;index.Rmarkdown&lt;/code&gt;. Because Hugo doesn&amp;rsquo;t know R or R Markdown, The &lt;code&gt;index.markdown&lt;/code&gt; version is what then feeds into the Hugo static site generator.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Try it again! Add another R code chunk like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```{r echo=FALSE}
library(ggplot2)
oplot &amp;lt;- ggplot(Orange, aes(x = age, 
                   y = circumference, 
                   colour = Tree)) +
  geom_point() +
  geom_line() +
  guides(colour = FALSE) +
  theme_bw()
oplot
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Knit, and you should see something like:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;post-plot.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    Many R Markdown output options for HTML documents are not going to be possible here, like tabbed sections, floating table of contents, the &lt;code&gt;code_download&lt;/code&gt; button, etc. Also, HTML widgets are a little dicey currently.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This is a single page. It is made with R Markdown, and happens to be a blog post, although you can use R Markdown to create content for any other content section too.&lt;/p&gt;
&lt;p&gt;If you want a featured image to accompany your post and show up on your listing page (the clickable list of all your posts), you&amp;rsquo;ll want to add an image with the word &lt;code&gt;featured&lt;/code&gt; in the filename:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;content/
├── posts
│   ├── hi-hugo
│   │   ├── bakers.csv
│   │   ├── image1.jpg
│   │   ├── image2.png
│   │   ├── index.Rmarkdown
│   │   ├── index.markdown   
│   │   └── featured-bakers.jpg   &amp;lt;- ➕
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;workflow&#34;&gt;Workflow&lt;a href=&#34;#workflow&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;My workflow in RStudio at this point (again, just viewing locally because we haven&amp;rsquo;t deployed yet) works best like this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open the RStudio project for the site.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start the Hugo server using &lt;code&gt;blogdown::serve_site()&lt;/code&gt; (only once due to the magic of &lt;em&gt;LiveReload&lt;/em&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;View site in the RStudio viewer pane, and open in a new browser window while I work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select existing files to edit using the file pane in RStudio.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After making changes, save if a plain &lt;code&gt;.md&lt;/code&gt; file, or if working with an &lt;code&gt;.Rmd&lt;/code&gt; or an &lt;code&gt;.Rmarkdown&lt;/code&gt; document, &lt;code&gt;knit&lt;/code&gt; to preview! You can now use the Knit button to knit to the correct output format. You can also use the keyboard shortcut &lt;code&gt;Cmd+Shift+K&lt;/code&gt; (Mac) or &lt;code&gt;Ctrl+Shift+K&lt;/code&gt; (Windows/Linux).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The console will detect the change (it will print &lt;code&gt;Change detected, rebuilding site.&lt;/code&gt;), the viewer pane will update, and (in a few seconds) your local view in your browser will also refresh. Try to avoid hitting the refresh button in your browser.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When happy with changes, add/commit/push changes to GitHub.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Having &lt;code&gt;blogdown::serve_site&lt;/code&gt; running locally with &lt;em&gt;LiveReload&lt;/em&gt; is especially useful as you can immediately see if you have totally screwed up. For example, in editing my &lt;code&gt;about.md&lt;/code&gt; file, this error popped up in my console after making a change and I was able to fix the error right away:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Started building sites ...
ERROR 2017/06/08 16:22:34 failed to parse page metadata for home/about.md: (18, 6): missing comma
Error: Error building site: Errors reading pages: Error: failed to parse page metadata for home/about.md: (18, 6): missing comma for about.md
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;using-github&#34;&gt;Using GitHub&lt;a href=&#34;#using-github&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s go ahead and push our changes to GitHub. First, let&amp;rsquo;s make a &lt;code&gt;.gitignore&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;file.edit(&amp;quot;.gitignore&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add this content:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.Rproj.user
.Rhistory
.RData
.Ruserdata
.DS_Store
Thumbs.db
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;check-yourself-before-you-wreck-yourself&#34;&gt;Check yourself before you wreck yourself&lt;a href=&#34;#check-yourself-before-you-wreck-yourself&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s use blogdown to check this file before we do our first commit:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;blogdown::check_gitignore()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You should see something like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; check_gitignore()
― Checking .gitignore
| Checking for items to remove...
○ Nothing to see here - found no items to remove.
| Checking for items you can safely ignore...
○ Found! You have safely ignored: .DS_Store, Thumbs.db
| Checking for items to ignore if you build the site on Netlify...
● [TODO] When Netlify builds your site, you can safely add to .gitignore: public, resources
― Check complete: .gitignore
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You have a &lt;code&gt;[TODO]&lt;/code&gt; item- go ahead and add &lt;code&gt;public&lt;/code&gt; and &lt;code&gt;resources&lt;/code&gt; on their own lines in your &lt;code&gt;.gitignore&lt;/code&gt; file. We&amp;rsquo;ll be configuring Netlify to build our site shortly, so go right ahead while the file is open.&lt;/p&gt;
&lt;p&gt;While we are at it, let&amp;rsquo;s check out our content too:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;blogdown::check_content()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You may notice a few pieces of content are flagged as &lt;code&gt;draft&lt;/code&gt;. This is good to know! Read up on drafts in Hugo 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/content.html#yaml-metadata&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Our checks are pretty clean, so you can freely add/commit your project files to GitHub. You now should have the basic mechanics of your site working.&lt;/p&gt;



&lt;h2 id=&#34;step-5-publish-site&#34;&gt;Step 5: Publish site&lt;a href=&#34;#step-5-publish-site&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;05-blogdown-2021.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Thus far, we&amp;rsquo;ve only been previewing our site locally, then pushing the source files (but not the built site) to GitHub. This workflow works, but I assume you want to ride this bike. Let&amp;rsquo;s skip the training wheels — we are going one step more advanced by using GitHub with Netlify now.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Note that you could use &lt;code&gt;blogdown::build_site()&lt;/code&gt;, then publish the &lt;code&gt;public/&lt;/code&gt; folder using Netlify &lt;a href=&#34;https://app.netlify.com/drop&#34;&gt;drag &amp;amp; drop&lt;/a&gt;. Watch this &lt;a href=&#34;../talk/2020-sharing-short-notice/&#34;&gt;webinar&lt;/a&gt; called &amp;ldquo;Sharing on Short Notice&amp;rdquo; to learn more - but this is a less advanced workflow.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;To get started using Netlify for real (which has a free plan that should largely cover recreational blogging use!):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Go online to 
&lt;a href=&#34;https://www.netlify.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Netlify&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on the &lt;strong&gt;Sign Up&lt;/strong&gt; button and sign up using your existing GitHub account (no need to create another account).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Log in, and select: &lt;code&gt;New site from Git &amp;gt; Continuous Deployment: GitHub&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;From there, Netlify will allow you to select from your existing GitHub repositories. You&amp;rsquo;ll pick the repo you&amp;rsquo;ve been working from with &lt;code&gt;blogdown&lt;/code&gt;. Leave all settings as they are and select &lt;strong&gt;Deploy Site&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You should see something like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new_netlify.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;When it is done, you can click on the link to your new site! And the most magical thing of all, every time you push any changes to your site to GitHub, Netlify will detect the push, re-build, then update your published site. It&amp;rsquo;s a good thing. It&amp;rsquo;s called continuous deployment, and it is the main reason to use Netlify for a blogdown site.&lt;/p&gt;
&lt;p&gt;With a new site, Netlify will deploy your site and assign you a random subdomain name of the form &lt;code&gt;random-word-12345.netlify.app&lt;/code&gt;. Mine was particularly unfortunate, with the random word &lt;code&gt;garbage-collector-janice&lt;/code&gt;. You should know that you can change this; I changed mine to &lt;code&gt;apreshill.netlify.app&lt;/code&gt;. Do this by navigating to your site on Netlify, then click on &lt;strong&gt;Settings&lt;/strong&gt;. Under &lt;strong&gt;Site information&lt;/strong&gt;, click on the &lt;em&gt;Change site name&lt;/em&gt; button.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;netlify-site-name.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Whether you change your Netlify site name or use the random one, go back to your configuration file and cchange the baseurl there to match where Netlify is publishing your site:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rstudioapi::navigateToFile(&amp;quot;config.yaml&amp;quot;, line = 3)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You actually have most of the necessary wiring laid out for you already in your repo, which is why this worked. Our site has a &lt;code&gt;netlify.toml&lt;/code&gt; file, which sets us the necessary settings for letting Netlify build our site for us and then publish it. You can read more about this file 
&lt;a href=&#34;https://maggie-98.github.io/post/2019-02-19-hugo-netlify-toml/&#34;&gt;here&lt;/a&gt;, and check it out using:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# if exists, opens; if not, creates new
blogdown::config_netlify()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, back in your local blogdown project, let&amp;rsquo;s check this file with blogdown:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; blogdown::check_netlify()
― Checking netlify.toml...
○ Found HUGO_VERSION = 0.79.1 in [build] context of netlify.toml.
| Checking that Netlify &amp;amp; local Hugo versions match...
| Mismatch found:
  blogdown is using Hugo version (0.79.0) to build site locally.
  Netlify is using Hugo version (0.79.1) to build site.
● [TODO] Option 1: Change HUGO_VERSION = &amp;quot;0.79.0&amp;quot; in netlify.toml to match local version.
● [TODO] Option 2: Use blogdown::install_hugo(&amp;quot;0.79.1&amp;quot;) to match Netlify version, and set options(blogdown.hugo.version = &amp;quot;0.79.1&amp;quot;) in .Rprofile to pin this Hugo version.
| Checking that Netlify &amp;amp; local Hugo publish directories match...
○ Good to go - blogdown and Netlify are using the same publish directory: public
― Check complete: netlify.toml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I recommend going with &lt;code&gt;Option 1&lt;/code&gt; here, so follow that &lt;code&gt;[TODO]&lt;/code&gt; and then run the function again to get a clean check.&lt;/p&gt;
&lt;p&gt;When you are ready to deploy, commit your changes and push to GitHub! Watch as your site rebuilds 🎉&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;To get an &lt;code&gt;*.rbind.io&lt;/code&gt; URL, follow &lt;a href=&#34;https://maggie-98.github.io/post/2017-06-12-up-and-running-with-blogdown/#rbindio-domain-names&#34;&gt;these instructions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Anytime you change your subdomain name, you need to update the &lt;code&gt;baseurl&lt;/code&gt; in your &lt;code&gt;config.toml&lt;/code&gt; file (so I changed mine to baseurl = &amp;ldquo;&lt;a href=&#34;https://apreshill.netlify.com/%22)&#34;&gt;https://apreshill.netlify.com/&amp;quot;)&lt;/a&gt;.&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;h2 id=&#34;step-6-sculpt-site&#34;&gt;Step 6: Sculpt site&lt;a href=&#34;#step-6-sculpt-site&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;06-blogdown-2021.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now, we&amp;rsquo;ll leave blogdown and R Markdown behind. We&amp;rsquo;ll just be using Hugo and Wowchemy (I think it is said like alchemy? Why??) to build your personal website.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s start by running another blogdown check to &lt;code&gt;check_hugo()&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; blogdown::check_hugo()
― Checking Hugo
| Checking Hugo version...
○ Found 4 versions of Hugo. You are using Hugo 0.79.0.
| Checking .Rprofile for Hugo version used by blogdown...
○ blogdown is using Hugo 0.79.0 to build site locally.
● [TODO] Also run blogdown::check_netlify() to check for possible problems with Hugo and Netlify.
― Check complete: Hugo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All set! We&amp;rsquo;ve already checked out our Netlify set-up ✔️ If you wish to clean up your local Hugo installations, check out:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;blogdown::remove_hugo()
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;configure-your-site&#34;&gt;Configure your site&lt;a href=&#34;#configure-your-site&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s start with the last thing you typically do to your home- decorate.&lt;/p&gt;
&lt;p&gt;Open up the file &lt;code&gt;config/_default/params.toml&lt;/code&gt;. Play with any of these configurations, but especially fonts/themes.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rstudioapi::navigateToFile(&amp;quot;config/_default/params.toml&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    If you want deeper customization of the styling, you can create a new CSS file &lt;code&gt;assets/scss/custom.scss&lt;/code&gt; and use it to override any existing styles. You can see mine &lt;a href=&#34;https://github.com/rbind/apreshill/blob/master/assets/scss/custom.scss&#34;&gt;here&lt;/a&gt;; heavily borrowing from my former intern &lt;a href=&#34;https://desiree.rbind.io/&#34;&gt;Desirée De Leon&lt;/a&gt;!
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;While you are at it, edit the other configuration files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can also view 
&lt;a href=&#34;https://github.com/rbind/apreshill/blob/master/config.toml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;my &lt;code&gt;config.toml&lt;/code&gt; file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Remember our 
&lt;a href=&#34;#todo-menu&#34;&gt;menu intentions&lt;/a&gt;? Go ahead and edit those too:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rstudioapi::navigateToFile(&amp;quot;config/_default/menus.toml&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let&amp;rsquo;s run a blogdown check on the configuration file before we leave:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; blogdown::check_config()
― Checking config.yaml
| Checking &amp;quot;baseURL&amp;quot; setting for Hugo...
○ Found baseURL = &amp;quot;https://silly-dubinsky-de5482.netlify.app&amp;quot;; nothing to do here!
| Checking &amp;quot;ignoreFiles&amp;quot; setting for Hugo...
● [TODO] Add these items to the &amp;quot;ignoreFiles&amp;quot; setting: &amp;quot;\\.Rmd$&amp;quot;, &amp;quot;\\.Rmarkdown$&amp;quot;, &amp;quot;\\.knit\\.md$&amp;quot;, &amp;quot;\\.utf8\\.md$&amp;quot;
| Checking setting for Hugo&#39;s Markdown renderer...
○ All set! Found the &amp;quot;unsafe&amp;quot; setting for goldmark.
― Check complete: config.yaml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Looks like we have a few &lt;code&gt;[TODO]&lt;/code&gt; items to add to our &lt;code&gt;config.yaml&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rstudioapi::navigateToFile(&amp;quot;config.yaml&amp;quot;, line = 15)
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;goodbye-nelson-b&#34;&gt;Goodbye Nelson B.&lt;a href=&#34;#goodbye-nelson-b&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s say goodbye to 
&lt;a href=&#34;https://themes.gohugo.io/theme/academic/#about&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nelson Bighetti&lt;/a&gt;. Everything in this single markdown file populates what is called the &lt;code&gt;about&lt;/code&gt; widget; a customized one looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;about.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Find and open the file &lt;code&gt;content/authors/admin/_index.md&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rstudioapi::navigateToFile(&amp;quot;content/authors/admin/_index.md&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Edit the YAML metadata to change:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The 
&lt;a href=&#34;https://wowchemy.com/docs/page-builder/#icons&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;icons&lt;/a&gt; and where they link to&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your current role and organization&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your interests&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your education&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The text under the YAML is your bio; you can use markdown here. Add an &lt;code&gt;avatar.jpg&lt;/code&gt; file too (it &lt;em&gt;must&lt;/em&gt; be named this) to the same folder.&lt;/p&gt;



&lt;h3 id=&#34;prune-widgets&#34;&gt;Prune widgets&lt;a href=&#34;#prune-widgets&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Remember how we started with thinking about your 
&lt;a href=&#34;#todo-content&#34;&gt;content&lt;/a&gt;? We are ready to prune out some of our unwanted widgets.&lt;/p&gt;
&lt;p&gt;Recall that on the 
&lt;a href=&#34;https://academic-demo.netlify.app/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic demo site&lt;/a&gt;, the entire home page is filled with widgets! The default example site is the exact same as the demo. It sets almost every available widget to &lt;strong&gt;active&lt;/strong&gt; to show you the range of what you could do.&lt;/p&gt;
&lt;p&gt;Deactivating the widgets you don&amp;rsquo;t need and only activating the ones you want will help you avoid having your home page feel like the 💀 &amp;ldquo;scroll of death,&amp;rdquo; as my friend 
&lt;a href=&#34;https://twitter.com/jackiewirz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jackie Wirz&lt;/a&gt; called it.&lt;/p&gt;
&lt;p&gt;Remember my 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Mr._Potato_Head&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mr. Potato Head&lt;/a&gt; analogy? The home page is your most prominent potato, and the widgets are all the pieces you could use.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/305jKnp2ErJK0/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Each widget you see is a &lt;code&gt;*.md&lt;/code&gt; file in the &lt;code&gt;content/home/&lt;/code&gt; folder. The metadata at the top helps you configure each widget; namely whether it is &lt;code&gt;active&lt;/code&gt; (true or false) and the widgets &lt;code&gt;weight&lt;/code&gt; (ordering, actual numbers doesn&amp;rsquo;t matter- only relative to the other weights).&lt;/p&gt;
&lt;p&gt;For example, to turn off the hero widget, use this code in your console and set &lt;code&gt;active = false&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rstudioapi::navigateToFile(&amp;quot;content/home/hero.md&amp;quot;, line = 5, column = 10)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Take about 10 minutes about try out turning widgets off and on, and changing their order to see what you like!&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    You can also delete a widget file. You can always recover &lt;code&gt;*.md&lt;/code&gt; widget files by going into your &lt;code&gt;themes/hugo-academic/exampleSite/content/home/&lt;/code&gt; folder.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;For my own site, I use 4 main home page widgets:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;a href=&#34;https://maggie-98.github.io/#about&#34;&gt;&lt;em&gt;about&lt;/em&gt;&lt;/a&gt; (photo / icons / bio / interests / education)&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://maggie-98.github.io/#slider&#34;&gt;&lt;em&gt;slider&lt;/em&gt;&lt;/a&gt; (used to showcase some feedback from my workshops)&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://maggie-98.github.io/#posts&#34;&gt;&lt;em&gt;posts&lt;/em&gt;&lt;/a&gt; (set to show only the most recent)&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://maggie-98.github.io/#talks&#34;&gt;&lt;em&gt;talks&lt;/em&gt;&lt;/a&gt; (set to show only the most recent)&lt;/li&gt;
&lt;/ol&gt;



&lt;h3 id=&#34;transplant-widgets&#34;&gt;Transplant widgets&lt;a href=&#34;#transplant-widgets&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;If you opted for a more streamlined home page with fewer widgets, you may experience &lt;em&gt;widget pruning regret&lt;/em&gt;. Many are very useful, and you may wish to use widgets on &lt;em&gt;other&lt;/em&gt; pages that are not the home page. In this theme, this is possible! Even if you turn off a widget on the home page, you can create what is called a widget page and add or even combine widgets there. I make heavy use of widget pages in my own site. Here are the steps (following the 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-a-widget-page&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;docs&lt;/a&gt;):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a new folder in &lt;code&gt;content/&lt;/code&gt;; let&amp;rsquo;s call it &lt;code&gt;resume&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inside &lt;code&gt;content/resume/&lt;/code&gt;, add a file named &lt;code&gt;index.md&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Populate &lt;code&gt;content/resume/index.md&lt;/code&gt; with a YAML, like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---
summary: More about my work experience
title: &amp;quot;Resume&amp;quot;
type: widget_page
---
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    The very critical line here is the &lt;code&gt;type: widget_page&lt;/code&gt;&amp;mdash;this sets you up to now copy over widgets from &lt;code&gt;content/home/&lt;/code&gt; in this new folder.
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;Copy the widget &lt;code&gt;*.md&lt;/code&gt; files you&amp;rsquo;d like to use into this &lt;code&gt;content/resume/&lt;/code&gt; folder. Edit their metadata (weights, other info), and be sure to set &lt;code&gt;active = true&lt;/code&gt;. For my own resume, I copied the &lt;em&gt;experience&lt;/em&gt; and &lt;em&gt;accomplishments&lt;/em&gt; widgets over.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to access this new widget page from your top navbar, open up your &lt;code&gt;config/_default/menus.toml&lt;/code&gt; and add it there, like:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[[main]]
  name = &amp;quot;Resume&amp;quot;
  url = &amp;quot;/resume&amp;quot;
  weight = 50
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    You can link to any specific widget by taking your baseurl and appending &lt;code&gt;/#{name-of-widget}&lt;/code&gt;, so &lt;code&gt;/#slider&lt;/code&gt; links to &lt;a href=&#34;https://maggie-98.github.io/#slider&#34;&gt;&lt;em&gt;my homepage slider&lt;/em&gt;&lt;/a&gt;. And &lt;code&gt;/resume/#accomplishments&lt;/code&gt; links to &lt;a href=&#34;https://maggie-98.github.io/resume/#accomplishments&#34;&gt;&lt;em&gt;my honors &amp;amp; awards&lt;/em&gt;&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Let&amp;rsquo;s run one final check, which wraps all 5 checking functions we&amp;rsquo;ve used so far into a single final checklist:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; blogdown::check_site()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is immensely comforting to me; read more about these new checking functions 
&lt;a href=&#34;https://maggie-98.github.io/post/2020-12-27-blogdown-checks/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/j1zW1Ng86MV78tRLOo/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;



&lt;h2 id=&#34;we-made-it&#34;&gt;We made it!&lt;a href=&#34;#we-made-it&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;At this point, you should be up and running with &lt;code&gt;blogdown&lt;/code&gt;, GitHub, and Netlify. You now have the scaffold up and ready for your ideas, your style, and your voice. If you made it this far, please share your site- I&amp;rsquo;d love to see it!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/1xNDlJsL1ntZZqm7pn/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Spoonful of Hugo: How much Hugo do I need to know?</title>
      <link>https://maggie-98.github.io/post/2020-12-12-how-much-hugo/</link>
      <pubDate>Sat, 12 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://maggie-98.github.io/post/2020-12-12-how-much-hugo/</guid>
      <description>&lt;p&gt;Greetings and happy holidays! As many folks are looking forward to down time over the holidays, my inbox naturally starts filling in with questions like &amp;ldquo;What is the difference between blogdown and X?&amp;rdquo;, &amp;ldquo;How hard is Hugo to learn?&amp;rdquo;, and &amp;ldquo;Which Hugo theme do you recommend?&amp;rdquo; These are all great questions. But the best one in my mind that one needs to ask is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;How much Hugo do I need to know &lt;em&gt;right now&lt;/em&gt;?&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And the answer, of course, depends on where you are starting from and where you&amp;rsquo;d like to end up.&lt;/p&gt;
&lt;p&gt;In this post, I&amp;rsquo;ll share when and why I think a typical R blogdown user needs to learn Hugo. I&amp;rsquo;ll tell you a secret: I enjoyed learning Hugo. But I learned blogdown first, and frankly was blissfully unaware of the complexity of the underlying Hugo templating language. I was a happy blogdown user for about 1.5 years before taking the plunge to actually learn Hugo. Why did I do it? I needed to build a website for the RStudio Education team, and for sustainability and maintenance, I had been burned by external themes in various ways too many times for my personal site.&lt;/p&gt;
&lt;p&gt;We decided as a team that we didn&amp;rsquo;t want our site to depend on a third-party Hugo theme. What can go wrong with using third-party Hugo themes? For one, if you choose a not very active or well-maintained theme, then you could get stuck with a not well-maintained theme. Or worse, your theme could get orphaned, with no maintainer. But, on the flip-side, if you pick a very active and well-maintained theme, you might find yourself dealing with theme and Hugo updates more than you would like (&lt;em&gt;cough cough&lt;/em&gt; like the Wowchemy/Academic theme).&lt;/p&gt;
&lt;p&gt;The 
&lt;a href=&#34;https://www.tidyverse.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tidyverse.org&lt;/a&gt; site was built with a lot of custom HTML, CSS, and some Hugo layout files. I decided to turn that site into a real Hugo theme, and use that theme across teams. You may not have noticed any change 
&lt;a href=&#34;https://github.com/tidyverse/tidyverse.org/pull/350&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;when we switched to the new theme&lt;/a&gt;- at least I hope you didn&amp;rsquo;t! That site and the 
&lt;a href=&#34;https://education.rstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RStudio Education&lt;/a&gt; site both use the same Hugo theme I built.&lt;/p&gt;
&lt;p&gt;Now that I&amp;rsquo;ve gone from casual Hugo user to theme developer, I have some advice. Generally, as a blanket rule, here is what you should and should not touch:&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;An &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/blogdown?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#blogdown&lt;/a&gt; file hierarchy cheatsheet:&lt;br&gt;&lt;br&gt;├─ archetypes &amp;lt;- edit me! &lt;br&gt;├─ config.toml &amp;lt;- edit me! &lt;br&gt;├─ content &amp;lt;- edit me! &lt;br&gt;├─ data &amp;lt;- edit me! &lt;br&gt;├─ layouts &amp;lt;- edit me! &lt;br&gt;├─ public &amp;lt;- ignore me!&lt;br&gt;├─ static &amp;lt;- use me! (png/pdf/csv/xls)&lt;br&gt;├─ themes &amp;lt;- don&amp;#39;t touch! &lt;a href=&#34;https://t.co/gvVA703Lwa&#34;&gt;pic.twitter.com/gvVA703Lwa&lt;/a&gt;&lt;/p&gt;&amp;mdash; Alison Hill (@apreshill) &lt;a href=&#34;https://twitter.com/apreshill/status/1078494406301212672?ref_src=twsrc%5Etfw&#34;&gt;December 28, 2018&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt; 
&lt;!--![](https://media.giphy.com/media/l1J9wMccAykUCLIic/giphy.gif)--&gt;
&lt;p&gt;But what can you do with &lt;strong&gt;blogdown&lt;/strong&gt; before learning Hugo? When and how do you know when you need to get to know Hugo better? Hopefully this post will help answer these questions.&lt;/p&gt;
&lt;p&gt;Inspired by Jenny Bryan&amp;rsquo;s talk on 
&lt;a href=&#34;https://resources.rstudio.com/rstudio-conf-2019/lazy-evaluation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;lazy evaluation&lt;/a&gt;, I&amp;rsquo;m framing these learning decision points based on &lt;em&gt;what you want to get done&lt;/em&gt;.&lt;/p&gt;



&lt;h2 id=&#34;you-want-to-make-a-website-with-blogdown&#34;&gt;You want to: make a website with blogdown&lt;a href=&#34;#you-want-to-make-a-website-with-blogdown&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;You need to know this much Hugo:&lt;/strong&gt; Hugo takes a collection of files (called content) and generates a collection of static HTML files as a single, cohesive, navigable website (plopped in your &lt;code&gt;public/&lt;/code&gt; folder). How it looks depends on which Hugo theme you pick &lt;code&gt;r emo::ji(&amp;quot;paint&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You&amp;rsquo;ll need to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/themes.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pick a Hugo theme&lt;/a&gt;, which dictates the style and layout of your content.&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/rstudio-ide.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;build and serve your site locally&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;deploy your site! If you are just starting out, I recommend &lt;strong&gt;everyone&lt;/strong&gt; starts by first 
&lt;a href=&#34;https://app.netlify.com/drop&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dragging and dropping&lt;/a&gt; your project&amp;rsquo;s &lt;code&gt;public/&lt;/code&gt; folder into Netlify. There is your site &lt;code&gt;r emo::ji(&amp;quot;boom&amp;quot;)&lt;/code&gt;. With a link. That you can send to your best friend &lt;em&gt;right now&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/static-sites.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;realize this is a &lt;strong&gt;static&lt;/strong&gt; site&lt;/a&gt;. Read up on static sites!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But you probably want to do more&amp;hellip;&lt;/p&gt;



&lt;h2 id=&#34;you-want-to-customize-your-site&#34;&gt;You want to: customize your site&lt;a href=&#34;#you-want-to-customize-your-site&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;You need to know this much more Hugo:&lt;/strong&gt; Hugo themes typically use one or more metadata files (TOML or YAML) to set up global variables to use to build your site. This is usually the way to add a site url, a site name, link social accounts for personal websites, basically take any of the default content you see and customize it for you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The main files to edit are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/configuration.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;configuration files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get familiar with &lt;code&gt;TOML&lt;/code&gt;, I recommend:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/configuration.html#toml-syntax&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;a brief intro from the blogdown book&lt;/a&gt;, and&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://learnxinyminutes.com/docs/toml/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Learn TOML in Y Minutes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But, since the time we published the blogdown book, Hugo introduced configuration directories, which allowed us to no longer have one giant &lt;code&gt;config.toml&lt;/code&gt; file, and instead have multiple configuration files, like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;├── config.toml            &amp;lt;- Hugo-defined variables
├── config
│   ├── _default
│   │   ├── menus.toml     &amp;lt;- menus :)
│   │   └── params.toml    &amp;lt;- theme-specific variables
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is how you can think of these:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;config.toml&lt;/code&gt;/&lt;code&gt;config.yaml&lt;/code&gt;: your most direct communication with Hugo. These are standard Hugo-defined variables that have defaults you can override in this file. You can view all of them 
&lt;a href=&#34;https://gohugo.io/getting-started/configuration/#all-configuration-settings&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. These are universal across themes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;menus.toml&lt;/code&gt;: your way of editing the content in a side or upper navigation menu bar; see example 
&lt;a href=&#34;https://gohugo.io/getting-started/configuration/#all-configuration-settings&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. These work the same way across themes (with the exception of drop-down menus, which work in some themes but not others).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;params.toml&lt;/code&gt;: your theme&amp;rsquo;s way of providing an API for Hugo. These are variables that your theme creator has made for you! This is a gift, but not the kind you can re-gift easily. This file will not work with any other theme.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If your theme uses only a single &lt;code&gt;config.toml&lt;/code&gt; file, you can infer these subsections as you scroll down:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# before the first use of [[]]
# are all the Hugo variables

# Menu Configuration- same as menus.toml
[[menu.main]]

# Theme Configuration- same as params.toml
[params]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You still don&amp;rsquo;t need to learn Hugo&amp;hellip;yet.&lt;/p&gt;



&lt;h2 id=&#34;you-want-to-add-content-to-your-site&#34;&gt;You want to: add content to your site&lt;a href=&#34;#you-want-to-add-content-to-your-site&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;You need to know this much more Hugo:&lt;/strong&gt; Remember how the input to Hugo is a &amp;ldquo;collection of files&amp;rdquo;? The input is more specifically a collection of markdown files. Hugo themes use content written in markdown files (for blogdown users, R Markdown files work too) to generate your site&amp;rsquo;s content; with one very important rule — the same structure that works to organize your site content is used to organize the rendered site.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But, what does that &lt;strong&gt;mean&lt;/strong&gt;?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/Poaj36am3ZqaA/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The main files to edit are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;files in the 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/content.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;content/&lt;/code&gt; folder&lt;/a&gt; (and see my post on 
&lt;a href=&#34;https://maggie-98.github.io/post/2019-10-26-hugo-layouts/&#34;&gt;page bundles&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;First, the structure and the names inside your &lt;code&gt;content/&lt;/code&gt; folder is meaningful. The &lt;strong&gt;names&lt;/strong&gt; of each folder determine what Hugo layout will be applied. Why do you care? If you change the content name, things may not look good because Hugo can&amp;rsquo;t find the right layout. Think of your site like going to a party at a friend&amp;rsquo;s house- you can bring food, wine, maybe a board game- your host knows what to do with these things. But if you bring a monkey, for example, your host has no idea what to do with it!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/JPgG1GbGnGbgBitA1Q/giphy.gif&#34; alt=&#34;monkey at party&#34;&gt;&lt;/p&gt;
&lt;p&gt;Yuo &lt;em&gt;can&lt;/em&gt; override this by adding a &lt;code&gt;layout&lt;/code&gt; key to your file&amp;rsquo;s YAML, as described 
&lt;a href=&#34;https://gohugo.io/content-management/front-matter/#front-matter-variables&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. The relevant bit is here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;code&gt;layout&lt;/code&gt;: the layout Hugo should select from the lookup order when rendering the content. If a &lt;code&gt;type&lt;/code&gt; is not specified in the front matter, Hugo will look for the layout of the same name in the layout directory that corresponds with a content’s section.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The subfolders also tell you where you can find your content on your site.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.
├── content/
│   ├── authors/            # =&amp;gt; https://example.com/authors/
│   ├── privacy/index.md    # =&amp;gt; https://example.com/privacy/
│   └── home/               # =&amp;gt; https://example.com/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You should take a bit of time to get the &amp;ldquo;cook&amp;rsquo;s tour&amp;rdquo; of your site. Try looking at each file and guessing the URL you&amp;rsquo;ll use to see it in the rendered site. Do this now and it will become like second nature.&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;ll no doubt run into one question: what is the difference between &lt;code&gt;index.md&lt;/code&gt; and &lt;code&gt;_index.md&lt;/code&gt; files? &lt;code&gt;index.md&lt;/code&gt; are simple pages; the single file goes into the site and a single file comes back out when you view the site. This is called a 
&lt;a href=&#34;https://gohugo.io/content-management/page-bundles/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;leaf bundle&lt;/a&gt; in Hugo.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.
├── content/
│   ├── privacy/index.md       # =&amp;gt; a leaf bundle
│   └── blog/                  # =&amp;gt; a branch bundle
│       ├── _index.md          # =&amp;gt; AHA!
│       ├── gorillas/index.md  # =&amp;gt; a leaf bundle
│       ├── baboons/index.md   # =&amp;gt; another leaf bundle
│       └── monkeys/index.md   # =&amp;gt; yet another leaf bundle
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An &lt;code&gt;_index.md&lt;/code&gt; file, on the other hand, signals that this folder has a &lt;em&gt;listing page&lt;/em&gt; activated. This is called a 
&lt;a href=&#34;https://gohugo.io/content-management/page-bundles/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;branch bundle&lt;/a&gt; in Hugo. Listing pages are a bit magical, so make sure you understand them now. Typically, if you edit the &lt;code&gt;_index.md&lt;/code&gt; file at all, you edit the YAML of this file- often the page content below the YAML isn&amp;rsquo;t revealed by the theme (this is a bit hand-wavy and I&amp;rsquo;m sorry for that).&lt;/p&gt;
&lt;p&gt;So if you have &lt;code&gt;content/blog/gorillas/index.md&lt;/code&gt;, you get not one but two pages. Let&amp;rsquo;s pretend my baseurl is &lt;code&gt;alison.rbind.io&lt;/code&gt;. You get a &lt;strong&gt;list&lt;/strong&gt; page that will render at &lt;code&gt;alison.rbind.io/blog/&lt;/code&gt;, and indexes all the &lt;code&gt;index.md&lt;/code&gt; files inside that content folder. You also get a &lt;strong&gt;single&lt;/strong&gt; page that will render at &lt;code&gt;alison.rbind.io/blog/gorillas/&lt;/code&gt;, which shows you the full content of the &lt;code&gt;index.md&lt;/code&gt; file.&lt;/p&gt;



&lt;h2 id=&#34;you-want-to-customize-colors-and-fonts-on-your-site&#34;&gt;You want to: customize colors and fonts on your site&lt;a href=&#34;#you-want-to-customize-colors-and-fonts-on-your-site&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;You need to know this much more Hugo:&lt;/strong&gt; It depends on your theme :) You may need to learn CSS, and you may need to learn to &lt;em&gt;read&lt;/em&gt; Hugo now.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Many Hugo themes enable users to edit aesthetic elements like colors and fonts. So, depending on your Hugo theme, you may not need to know CSS. Other themes provide a way to “plug in” a custom CSS file to change those things and more (like spacing, font sizing, etc.). Guess where that is? Usually it is in your &lt;code&gt;config.toml&lt;/code&gt; file in the &lt;code&gt;[params]&lt;/code&gt; section (if no configuration directory) or the &lt;code&gt;params.toml&lt;/code&gt; file. The theme author should leave you a breadcrumb to figure out what you should name and where you should place your custom CSS file.&lt;/p&gt;
&lt;p&gt;For example, the Hugo academic theme provides a few ways in. In the &lt;code&gt;params.toml&lt;/code&gt; file, you can use an included 
&lt;a href=&#34;https://github.com/gcushen/hugo-academic/blob/b5963ac66c4c0400e88cd603a74d7734365f0885/exampleSite/config/_default/params.toml#L5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;site color theme&lt;/a&gt; or make your own, and customize your fonts. You can also provide your own custom CSS file by including it here: &lt;a href=&#34;https://github.com/gcushen/hugo-academic/blob/master/assets/scss/custom.scss&#34;&gt;https://github.com/gcushen/hugo-academic/blob/master/assets/scss/custom.scss&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If your theme doesn&amp;rsquo;t provide this level of support, then you may need to learn Hugo. Sometimes the options are tough to find, unfortunately, but many theme designers provide at least a plug-in option. Others may require you to dig into some of your theme&amp;rsquo;s partial layouts (i.e., &lt;code&gt;themes/theme_name/layouts/partials/&lt;/code&gt;) and learn to read them. Here are some examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Plug-in CSS&lt;/strong&gt;: Hugo 
&lt;a href=&#34;https://github.com/kakawait/hugo-tranquilpeak-theme/blob/d306f0d7f67ca5880cb97530056c59216597cd51/exampleSite/config.toml#L175-L178&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tranquil Peak&lt;/a&gt; theme tells you to place the file inside your &lt;code&gt;static/&lt;/code&gt; folder then provide the path and filename in the &lt;code&gt;config.toml&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[params]
  # Custom CSS. Put here your custom CSS files. They are loaded after the theme CSS;
  # they have to be referred from static root. Example
  # [[params.customCSS]]
  #   href = &amp;quot;css/mystyle.css&amp;quot;         &amp;lt;- AHA!
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Go Fish&lt;/strong&gt;: Hugo 
&lt;a href=&#34;https://github.com/victoriadrake/hugo-theme-sam/blob/39ea2d5e64fd0426d275060cfa6c549df66cdece/layouts/partials/head/css.html#L14-L18&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;I Am Sam&lt;/a&gt; theme doesn&amp;rsquo;t give you this in the &lt;code&gt;config.toml&lt;/code&gt; file, but looking at one of the layout partials you can see that the theme is actually built to plug-in your custom CSS:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!-- Custom css --&amp;gt;
{{ range .Site.Params.customCSS -}}    &amp;lt;- AHA!
{{ $style := resources.Get . }}
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;{{ $style.RelPermalink }}&amp;quot; integrity=&amp;quot;{{ $style.Data.Integrity }}&amp;quot; crossorigin=&amp;quot;anonymous&amp;quot; media=&amp;quot;screen&amp;quot;&amp;gt;
{{- end }}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;h2 id=&#34;you-want-to-renovate-the-layout-of-content-on-your-site&#34;&gt;You want to: renovate the layout of content on your site&lt;a href=&#34;#you-want-to-renovate-the-layout-of-content-on-your-site&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;You need to know this much more Hugo:&lt;/strong&gt; You need to learn to use Hugo variables.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I say renovate, but these can be anywhere from small to big renovation projects. The key word here is renovate, which in Hugo world, means you want to &lt;em&gt;override&lt;/em&gt; your site&amp;rsquo;s theme. Let&amp;rsquo;s say you want different information to show up in your 
&lt;a href=&#34;https://github.com/rbind/apreshill/commit/be80b68eec3183dea304b66eaab874d496d7d1bb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;site&amp;rsquo;s footer&lt;/a&gt;. Or maybe you want add something new to the 
&lt;a href=&#34;https://github.com/maelle/simplymaelle/pull/10&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;metadata&lt;/a&gt; for your blog posts.&lt;/p&gt;
&lt;p&gt;Here is a great blog post to get you started:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://zwbetz.com/override-a-hugo-theme/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Override a Hugo theme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; If you adapt your existing theme&amp;rsquo;s Hugo layout files, be sure to make a copy of the layout you want to edit &lt;strong&gt;first&lt;/strong&gt; and add it to your project root&amp;rsquo;s &lt;code&gt;layouts/&lt;/code&gt; folder before editing. Please do not edit any files anywhere in your &lt;code&gt;themes/&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;Now, the hardest part of doing is often figuring out which layout file is the one you need to edit. Often you&amp;rsquo;ll need to do some digging to figure out which file is the one to touch.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.
├── layouts/
│   ├── _default/           # edit me!
│   ├── authors/            # edit me!
│   └── partials/           # edit me!
├── themes/
│   ├── theme_name/
│   │   ├── layouts
│   │   │   ├── _default/   # do not touch
│   │   │   ├── authors/    # do not touch (seriously)
│   │   │   └── partials/   # `r emo::ji(&amp;quot;fire&amp;quot;)`
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You&amp;rsquo;ll also want to learn about Hugo 
&lt;a href=&#34;https://gohugo.io/variables/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;variables&lt;/strong&gt;&lt;/a&gt;, especially:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://gohugo.io/variables/site/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Site variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://gohugo.io/variables/site/#the-siteparams-variable&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The &lt;code&gt;.Site.Params&lt;/code&gt; variable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://gohugo.io/variables/page/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Page variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://gohugo.io/variables/page/#the-param-method&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The &lt;code&gt;.Param&lt;/code&gt; method for page variables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You also might need to understand Hugo 
&lt;a href=&#34;https://gohugo.io/templates/introduction/#logic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;logic&lt;/a&gt; like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://gohugo.io/templates/introduction/#iteration&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;iteration&lt;/a&gt; and&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://gohugo.io/templates/introduction/#conditionals&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;conditionals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Important: I learned this the hard way, but you &lt;a href=&#34;https://gohugo.io/templates/introduction/#html-comments-containing-go-templates&#34;&gt;cannot&lt;/a&gt; wrap your Hugo code in HTML comments to deactivate it; all Hugo code even inside of HTML comments will still be evaluated when you build your site.
  &lt;/div&gt;
&lt;/div&gt;



&lt;h2 id=&#34;you-want-to-create-your-own-hugo-theme&#34;&gt;You want to: create your own Hugo theme&lt;a href=&#34;#you-want-to-create-your-own-hugo-theme&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;You need to know this much more Hugo:&lt;/strong&gt; Welcome to the wizarding world of Hugo! &lt;code&gt;r emo::ji(&amp;quot;wizard&amp;quot;)&lt;/code&gt; You now need to learn to write Hugo templates.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here are some resources for writing Hugo 
&lt;a href=&#34;https://gohugo.io/templates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;templates&lt;/strong&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://gohugo.io/templates/introduction/#the-dot&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Context (aka “the dot”) &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://regisphilibert.com/blog/2018/02/hugo-the-scope-the-context-and-the-dot/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo, the scope, the context and the dot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://gohugo.io/templates/lookup-order/#examples-layout-lookup-for-regular-pages&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lookup order&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://gohugo.io/templates/base/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Base templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://gohugo.io/templates/single-page-templates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Single page templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://gohugo.io/templates/lists/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;List page templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These resources were especially helpful to me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/templates.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blogdown book section on templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/custom-layouts.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blogdown book section on customizing layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The 
&lt;a href=&#34;https://gohugo.io/documentation/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo docs&lt;/a&gt; are pretty strong&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://zwbetz.com/make-a-hugo-blog-from-scratch/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Make a Hugo blog from scratch | zwbetz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://discourse.gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo Community Discourse Forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.mikedane.com/static-site-generators/hugo/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;All of Mike Dane&amp;rsquo;s Hugo tutorials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I spent a lot of time looking at other Hugo themes; here are some quality ones to learn from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://masalmon.eu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Maëlle Salmon&amp;rsquo;s&lt;/a&gt; ROpenSci Hugo theme: &lt;a href=&#34;https://github.com/ropensci/roweb2/tree/master/themes/ropensci&#34;&gt;https://github.com/ropensci/roweb2/tree/master/themes/ropensci&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://amber.rbind.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Amber Thomas&amp;rsquo;s&lt;/a&gt; Data Science Hugo theme:
&lt;a href=&#34;https://github.com/ProQuestionAsker/hugo-data-science&#34;&gt;https://github.com/ProQuestionAsker/hugo-data-science&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://djnavarro.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Danielle Navarro&amp;rsquo;s&lt;/a&gt; slum Hugo theme: &lt;a href=&#34;https://github.com/djnavarro/hugo-slum&#34;&gt;https://github.com/djnavarro/hugo-slum&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;My own humble Hugo theme: &lt;a href=&#34;https://github.com/rstudio/hugo-graphite&#34;&gt;https://github.com/rstudio/hugo-graphite&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Again, this is all just based on my own experiences- your mileage may vary as always.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Summer of blogdown: Day 04</title>
      <link>https://maggie-98.github.io/talk/2019-summer-of-blogdown-04/</link>
      <pubDate>Thu, 13 Jun 2019 09:00:00 +0000</pubDate>
      <guid>https://maggie-98.github.io/talk/2019-summer-of-blogdown-04/</guid>
      <description>&lt;p&gt;A hands-on workshop to creating a personal website using blogdown and the Hugo Academic theme.&lt;/p&gt;
&lt;p&gt;Four daily 1-hour sessions (see slides) plus 30-60 minutes of homework for 3 nights.&lt;/p&gt;
&lt;p&gt;See the project link for all the days of the summer of blogdown.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Summer of blogdown: Day 03</title>
      <link>https://maggie-98.github.io/talk/2019-summer-of-blogdown-03/</link>
      <pubDate>Wed, 12 Jun 2019 09:00:00 +0000</pubDate>
      <guid>https://maggie-98.github.io/talk/2019-summer-of-blogdown-03/</guid>
      <description>&lt;p&gt;A hands-on workshop to creating a personal website using blogdown and the Hugo Academic theme.&lt;/p&gt;
&lt;p&gt;Four daily 1-hour sessions (see slides) plus 30-60 minutes of homework for 3 nights.&lt;/p&gt;
&lt;p&gt;See the project link for all the days of the summer of blogdown.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Summer of blogdown: Day 02</title>
      <link>https://maggie-98.github.io/talk/2019-summer-of-blogdown-02/</link>
      <pubDate>Tue, 11 Jun 2019 09:00:00 +0000</pubDate>
      <guid>https://maggie-98.github.io/talk/2019-summer-of-blogdown-02/</guid>
      <description>&lt;p&gt;A hands-on workshop to creating a personal website using blogdown and the Hugo Academic theme.&lt;/p&gt;
&lt;p&gt;Four daily 1-hour sessions (see slides) plus 30-60 minutes of homework for 3 nights.&lt;/p&gt;
&lt;p&gt;See the project link for all the days of the summer of blogdown.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Summer of blogdown: Day 01</title>
      <link>https://maggie-98.github.io/talk/2019-summer-of-blogdown-01/</link>
      <pubDate>Mon, 10 Jun 2019 09:00:00 +0000</pubDate>
      <guid>https://maggie-98.github.io/talk/2019-summer-of-blogdown-01/</guid>
      <description>&lt;p&gt;A hands-on workshop to creating a personal website using blogdown and the Hugo Academic theme.&lt;/p&gt;
&lt;p&gt;Four daily 1-hour sessions (see slides) plus 30-60 minutes of homework for 3 nights.&lt;/p&gt;
&lt;p&gt;See the project link for all the days of the summer of blogdown.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Spoonful of Hugo: Troubleshooting Your Build</title>
      <link>https://maggie-98.github.io/post/2019-03-04-hugo-troubleshooting/</link>
      <pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://maggie-98.github.io/post/2019-03-04-hugo-troubleshooting/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Just a spoonful of Hugo helps the blog go down.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;me, only somewhat kidding&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this series, I&amp;rsquo;m sharing small spoonfuls of Hugo that I have learned that hopefully can help you get your site &lt;em&gt;UP&lt;/em&gt; (and even better- more efficient, more streamlined, more automated). You can read the previous posts about my &amp;ldquo;Spoonful of Hugo&amp;rdquo; series 
&lt;a href=&#34;https://maggie-98.github.io/post/2019-02-19-hugo-archetypes/&#34;&gt;about Hugo archetypes&lt;/a&gt;, 
&lt;a href=&#34;https://maggie-98.github.io/post/2019-02-19-hugo-netlify-toml/&#34;&gt;Hugo versions&lt;/a&gt;, and 
&lt;a href=&#34;https://maggie-98.github.io/post/2019-02-21-hugo-page-bundles/&#34;&gt;Hugo page bundles&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The following are a few steps that I always start with to troubleshoot any blogdown/Hugo/Netlify problems. These steps would solve what I would anecdotally estimate as ~50% of blogdown problems that I see posted in the 
&lt;a href=&#34;https://github.com/rstudio/blogdown/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub repository&lt;/a&gt; and on the 
&lt;a href=&#34;https://community.rstudio.com/tags/blogdown&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;community site&lt;/a&gt;.&lt;/p&gt;



&lt;h2 id=&#34;1-update-hugo&#34;&gt;#1: Update Hugo&lt;a href=&#34;#1-update-hugo&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://media.giphy.com/media/syCa5ird7wp0c/giphy.gif&#34; alt=&#34;Don&#39;t be like this&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure 1: Don&#39;t be like this&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;If things have gone south and you are getting Hugo errors when you use the &amp;ldquo;Serve Site&amp;rdquo; Addin locally, it is possible that you need to update your version of Hugo. From R, you can check your Hugo version with blogdown:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;blogdown::hugo_version()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then you can reference your 
&lt;a href=&#34;https://themes.gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo theme&lt;/a&gt; to find the minimum version of Hugo required by your theme:&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;hugo-min-version.png&#34; alt=&#34;Check your theme&#39;s minimum Hugo version&#34; width=&#34;1073&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure 2: Check your theme&#39;s minimum Hugo version&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;You can go higher than the minimum version though, so it&amp;rsquo;s good practice to update your Hugo, again from within R:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;blogdown:: update_hugo()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check your version again post-update:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;blogdown::hugo_version()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &#39;0.79.0&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are using Netlify to build your site using Hugo, you&amp;rsquo;ll want this version to match that- the best way to do that is with a 
&lt;a href=&#34;https://maggie-98.github.io/post/2019-02-19-hugo-netlify-toml/&#34;&gt;netlify.toml file&lt;/a&gt;.&lt;/p&gt;



&lt;h2 id=&#34;2-change-the-baseurl&#34;&gt;#2: Change the baseurl&lt;a href=&#34;#2-change-the-baseurl&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/zG6MKhlBxIloc/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;Open up your &lt;code&gt;config.toml&lt;/code&gt; file and look for the &lt;code&gt;baseurl&lt;/code&gt; field, usually pretty close to the top. Here is mine^[Yes that&amp;rsquo;s right, I don&amp;rsquo;t have a trailing slash- read on for why I can get away with this.]:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;baseurl = &amp;quot;https://alison.rbind.io&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now if you are just starting with Hugo and don&amp;rsquo;t &lt;em&gt;actually&lt;/em&gt; have a domain name yet, try taking the advice that blogdown automatically prints out for you:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Warning: You should change the &amp;quot;baseurl&amp;quot; option in config.toml 
from https://example.org to your actual domain; 
if you do not have a domain, set &amp;quot;baseurl&amp;quot; to &amp;quot;/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But be careful here- you shouldn&amp;rsquo;t leave it as &amp;ldquo;/&amp;quot;- once you do have your domain name you should update the baseurl as &amp;ldquo;/&amp;rdquo; is a not a valid URL.&lt;/p&gt;



&lt;h3 id=&#34;care-to-know-more&#34;&gt;Care to know more?&lt;a href=&#34;#care-to-know-more&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Here is a quote from the person who writes the Hugo docs:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&amp;hellip;the only purpose for the baseurl field in the config is to define the full base URL of your website for deployment purposes.&amp;rdquo; - @
&lt;a href=&#34;https://discourse.gohugo.io/t/how-not-to-specify-url-site/5691/7&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rdwatters&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The main error that would happen without the trailing slash in the past is that you would end up with a site where the theme&amp;rsquo;s CSS would be all wrong. This was probably because the theme designer used code like this buried in a layout file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;{{ .Site.BaseURL }}css/style.css&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, if you set &lt;code&gt;baseurl = &amp;quot;http://mysite.com&amp;quot;&lt;/code&gt; but only rendered locally, things would look just peachy, because the default local server already included the trailing slash. So, the link in the html file would be^[https://discourse.gohugo.io/t/how-not-to-specify-url-site/5691/5]:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;http://localhost:1313/css/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But, at build, the link in the html file would turn into:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;http://mysite.comcss/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which creates sites that look like this:&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://user-images.githubusercontent.com/47527626/52856178-f37a3680-3123-11e9-9b26-6500efac7404.png&#34; alt=&#34;Hugo tranquil peak theme&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure 3: Hugo tranquil peak theme&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/369&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub issue #369&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://user-images.githubusercontent.com/18710907/27711864-820dc59a-5cf2-11e7-99c8-b9b7e7f46ab3.png&#34; alt=&#34;Hugo universal theme&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure 4: Hugo universal theme&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/131&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub issue #131&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/4596214/26549134/7e3968fe-4445-11e7-90b1-87dd4ac2c1c0.png&#34; alt=&#34;&#34;&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/114&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub issue #114&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;However, Hugo authors and theme developers have largely been moving towards using relative URLs instead of the baseurl to build paths. This was based on public advice voiced by the Hugo authors on the discourse forum. For example:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;The recommended way to reference resources is to use either relURL or absURL template funcs, which handles the slash issues.&amp;quot;- @
&lt;a href=&#34;https://discourse.gohugo.io/t/0-19-to-0-30-2-baseurl-forward-slash-is-required/9206&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bep&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Following that advice, a more up-to-date theme would have code that looks like this buried in a layout file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;{{ &amp;quot;css/style.css&amp;quot; | relURL }}&amp;quot;/&amp;gt;  → 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Bottom line? If your theme uses &lt;code&gt;relURL&lt;/code&gt; or &lt;code&gt;absURL&lt;/code&gt; to link to site resources like CSS, JavaScript, or static images, then whether or not you include a trailing slash in your baseurl should not matter at all.&lt;/p&gt;
&lt;p&gt;And here is some tough love about your theme: if the most recent version &lt;em&gt;does&lt;/em&gt; still require the trailing slash in the &lt;code&gt;baseurl&lt;/code&gt; to &amp;ldquo;work&amp;rdquo; out of the box, I would seriously consider switching themes. This is a pretty good &amp;ldquo;canary in the coal mine&amp;rdquo; test regarding how up-to-date the theme author is, and how well the theme you have chosen adheres to Hugo templating best practices. If you are having pain with this now, it is likely not the only thing that will be painful about working with your theme.&lt;/p&gt;



&lt;h2 id=&#34;3-netlify-drag-and-drop&#34;&gt;#3: Netlify drag-and-drop&lt;a href=&#34;#3-netlify-drag-and-drop&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/DfbpTbQ9TvSX6/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;If you can render your site locally but your published site looks different, try the drag-and-drop method:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://arm.rbind.io/slides/img/netlify-new-site.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Use the &amp;ldquo;Serve Site&amp;rdquo; Addin, then drag-and-drop the &lt;code&gt;public/&lt;/code&gt; folder straight into Netlify. What does this do? You can now see your public site&amp;hellip;that you built&amp;hellip;with your local version of Hugo. Netlify is doing none of the site building here.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;index_files/figure-html/unnamed-chunk-10-1.gif&#34; alt=&#34;&#34;&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;One of the first benefits of this approach is that it ensures that you are able to actually &lt;em&gt;generate&lt;/em&gt; a &lt;code&gt;public/&lt;/code&gt; folder locally! I have seen folks struggle to deploy the wrong repo. This simple step can force you to make sure to use the &amp;ldquo;Serve Site&amp;rdquo; Addin to generate the &lt;code&gt;public/&lt;/code&gt; folder, and that the repo you are trying to link to Netlify actually contains a Hugo site because you must physically move the &lt;code&gt;public/&lt;/code&gt; folder. But this method can also help you diagnose other problems too.&lt;/p&gt;
&lt;p&gt;If your &lt;code&gt;public/&lt;/code&gt; folder &lt;strong&gt;does not render&lt;/strong&gt; on Netlify, you have work to do locally. I can&amp;rsquo;t tell you what it is as it can be a number of things, but you can be sure that your problem is not just the Netlify build- it is your local build too.&lt;/p&gt;
&lt;p&gt;If your &lt;code&gt;public/&lt;/code&gt; folder &lt;strong&gt;does render&lt;/strong&gt; perfectly on Netlify, but you are getting a Netlify build error, then you likely have a Hugo version problem. It might be that the version you are running locally is more recent than the version run by Netlify by default to actually build your site. The good news is there is a quick fix for this! The solution is to upgrade the Hugo version Netlify is using- see my advice 
&lt;a href=&#34;https://maggie-98.github.io/post/2019-02-19-hugo-netlify-toml/&#34;&gt;here for how to do that&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are happy with how your site looks but you are missing content and/or seeing old deleted content, then you may need the next few strategies to troubleshoot.&lt;/p&gt;



&lt;h2 id=&#34;4-torch-public&#34;&gt;#4: Torch &lt;code&gt;public/&lt;/code&gt;&lt;a href=&#34;#4-torch-public&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/YA6dmVW0gfIw8/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;When you are seeing very weird things locally, try deleting your local &lt;code&gt;public/&lt;/code&gt; folder. Then serve site again. Sometimes it can get &amp;ldquo;junked up&amp;rdquo;. I&amp;rsquo;ve found that sometimes deleted content can be a 
&lt;a href=&#34;https://community.rstudio.com/t/deleted-blog-post-still-showing-up-on-blogdown-website-in-index-html/14107&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;little sticky&lt;/a&gt;. As recommended in the 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/local-preview.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blogdown book&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;you are strongly recommended to delete the &lt;code&gt;/public/&lt;/code&gt; directory before you rebuild the site for publishing every time, because Hugo never deletes it&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Also, this has a bonus of reinforcing for you exactly what the &amp;ldquo;Serve Site&amp;rdquo; Addin &lt;em&gt;does&lt;/em&gt; - it regenerates the &lt;code&gt;public/&lt;/code&gt; folder. This is also the folder that, if you are using 
&lt;a href=&#34;post/2019-02-19-hugo-netlify-toml/&#34;&gt;Netlify to build your site&lt;/a&gt;, is in your &lt;code&gt;.gitignore&lt;/code&gt; file because Netlify (+ Hugo) generates this file &amp;ldquo;fresh&amp;rdquo; with each push to your GitHub repository.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;index_files/figure-html/unnamed-chunk-11-1.gif&#34; alt=&#34;&#34;&gt;&lt;!-- --&gt;&lt;/p&gt;



&lt;h2 id=&#34;5-peruse-public&#34;&gt;#5: Peruse &lt;code&gt;public/&lt;/code&gt;&lt;a href=&#34;#5-peruse-public&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/NS7gPxeumewkWDOIxi/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;When you notice weird things, try actually looking inside &lt;code&gt;public/&lt;/code&gt;- don&amp;rsquo;t be afraid to spelunk around in there! If you are seeing something wrong with your site, try to figure out how blogdown/Hugo is processing and rendering your content. This folder can tell you a lot! Keep in mind that your local &lt;code&gt;public/&lt;/code&gt; folder will still contain 
&lt;a href=&#34;#dates&#34;&gt;future/draft/expired content&lt;/a&gt; if you used the &amp;ldquo;Serve Site&amp;rdquo; Addin.&lt;/p&gt;



&lt;h2 id=&#34;dates&#34;&gt;#6: Back to the future&lt;a href=&#34;#dates&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://media.giphy.com/media/ek6obDm0IwjNm/giphy.gif&#34; alt=&#34;Where are my posts?&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure 5: Where are my posts?&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;If your site renders beautifully locally, and your drag-and-drop site from &lt;code&gt;public/&lt;/code&gt; looks the same, but you are missing key content when you actually deploy to Netlify using a Hugo build, you may have inadvertently stumbled into a Hugo date time warp. This is a fairly 
&lt;a href=&#34;https://community.rstudio.com/t/serve-site-working-but-posts-dont-show-up-on-github-io/11254/3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;common gotcha&lt;/a&gt;. Try using the drag-and-drop method again, this time first delete &lt;code&gt;public/&lt;/code&gt;, then instead of using the &amp;ldquo;Serve Site&amp;rdquo; Addin, run this in your console:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;blogdown::build_site(local = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Plop this &lt;em&gt;new&lt;/em&gt; public folder in Netlify to see what your site will look like when it is actually published. What does this show you? Your local Hugo build (read: your &lt;code&gt;public/&lt;/code&gt; folder generated by &amp;ldquo;Serve Site&amp;rdquo;) differs &lt;em&gt;by design&lt;/em&gt; in 3 important ways from your deployed site built by Netlify/Hugo. By default, 
&lt;a href=&#34;https://gohugo.io/getting-started/usage/#draft-future-and-expired-content&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo will not publish&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Content with a future &lt;code&gt;publishDate&lt;/code&gt; value&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Content with &lt;code&gt;draft: true&lt;/code&gt; status&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Content with a past &lt;code&gt;expiryDate&lt;/code&gt; value&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can see that these are 
&lt;a href=&#34;https://gohugo.io/getting-started/configuration/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;defaults&lt;/a&gt;. The behavior of the &amp;ldquo;Serve Site&amp;rdquo; Addin is also documented in the 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/local-preview.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blogdown book&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;This is for you to preview draft and future posts locally.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Blogdown&amp;rsquo;s &lt;code&gt;build_site(local = FALSE)&lt;/code&gt; differs from the &amp;ldquo;Serve Site&amp;rdquo; Addin in that it &lt;em&gt;will not&lt;/em&gt; render draft, future, or expired content. So your &lt;code&gt;public/&lt;/code&gt; folder from &lt;code&gt;build_site(local = FALSE)&lt;/code&gt; shows you &lt;strong&gt;exactly&lt;/strong&gt; what Netlify &lt;strong&gt;should&lt;/strong&gt; publish. Seeing it can help you troubleshoot why some content was showing up locally but not when you publish.&lt;/p&gt;
&lt;p&gt;The defaults are pretty sensible and nice to have, as you can still put these kinds of content under version control, and hence collaborate with other team members on the content without having the content publish (or expire) until you &lt;strong&gt;say so&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;To show content that Hugo was hiding, you&amp;rsquo;ll want to edit some YAML fields in the individual offending content files. For example, in the YAML of an individual content file (like a blog post), if you want to un-draft it, add or change this key/value:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;title: &#39;A Spoonful of Hugo: Troubleshooting your Build&#39;
author: &amp;quot;Alison Hill&amp;quot;
date: &#39;2019-03-04&#39;
draft: false
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively, if you want to date something in the future (like to advertise the date of an upcoming talk) but publish now, you can use the &lt;code&gt;publishDate&lt;/code&gt; field. The &lt;code&gt;publishDate&lt;/code&gt; field is a newer addition to Hugo (&amp;gt;= v0.54.0) which, if left unset, will default to the &lt;code&gt;date&lt;/code&gt; field, which means in the individual content file YAML you can do:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;title: &#39;A Spoonful of Hugo: Get excited!!&#39;
author: &amp;quot;Alison Hill&amp;quot;
date: &#39;2025-03-04&#39;
publishDate: &#39;2019-03-04&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hopefully these 6 things can help you get unstuck. If not, the 
&lt;a href=&#34;https://community.rstudio.com/tags/blogdown&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RStudio community forums&lt;/a&gt; are a great place to ask questions!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Spoonful of Hugo: Page Bundles</title>
      <link>https://maggie-98.github.io/post/2019-02-21-hugo-page-bundles/</link>
      <pubDate>Thu, 21 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://maggie-98.github.io/post/2019-02-21-hugo-page-bundles/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Just a spoonful of Hugo helps the blog go down.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;me, only somewhat kidding&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this series, I&amp;rsquo;m sharing small spoonfuls of Hugo that I have learned that hopefully can help you get your site &lt;em&gt;UP&lt;/em&gt; (and even better- more efficient, more streamlined, more automated). You can read the previous posts about my &amp;ldquo;Spoonful of Hugo&amp;rdquo; series 
&lt;a href=&#34;https://maggie-98.github.io/post/2019-02-19-hugo-archetypes/&#34;&gt;about Hugo archetypes&lt;/a&gt; and 
&lt;a href=&#34;https://maggie-98.github.io/post/2019-02-19-hugo-netlify-toml/&#34;&gt;Hugo versions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is my third post in this series and it is breaking news.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/dZCdA82qa8d4xVIwm3/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;



&lt;h2 id=&#34;hugo-page-bundles&#34;&gt;Hugo Page Bundles&lt;a href=&#34;#hugo-page-bundles&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Well, not really breaking news, but you still may not know about it! Hugo v0.32 
&lt;a href=&#34;https://gohugo.io/news/0.32-relnotes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduced&lt;/a&gt; a new feature called Page Bundles, as a way to organize the content files. Blogdown users rejoice that 
&lt;a href=&#34;https://twitter.com/dvaughan32&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Davis Vaughn&lt;/a&gt; posted an 
&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/351&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issue&lt;/a&gt; on the rstudio/blogdown repo to enable this option, which Yihui added shortly before rstudio::conf 2019 🎉. Here is the snippet from the &lt;code&gt;NEWS.md&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;One benefit of using a page bundle instead of a normal page is that you can put resource files associated with the post (such as images) under the same directory of the post itself. This means you no longer have to put them under the &lt;code&gt;static/&lt;/code&gt; directory, which has been quite confusing to Hugo beginners.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What does a blogdown/Hugo site begin to look like without page bundles? I think here is a representative example from 
&lt;a href=&#34;https://github.com/tidyverse/tidyverse.org/tree/c0eb070017cab794029b8ed3ac518f6e1a245a2b/content/articles&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tidyverse.org&lt;/a&gt; &lt;em&gt;(sorry tidyverse team- it&amp;rsquo;s not you, it&amp;rsquo;s the old Hugo).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For this team, they need an image for every post, which gets out of control pretty fast. Also, some ended up in 
&lt;a href=&#34;https://github.com/tidyverse/tidyverse.org/tree/c0eb070017cab794029b8ed3ac518f6e1a245a2b/static/images&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;static/&lt;/code&gt;&lt;/a&gt; too, organized by post (which I have done on my own blog, though not well or consistently).&lt;/p&gt;
&lt;p&gt;What would it look like to use page bundles?&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;content/
├── about
│   ├── index.md
├── posts
│   ├── 2015-07-23-hi-world
│   │   ├── bakers.csv
│   │   ├── image1.jpg
│   │   ├── image2.png
│   │   └── index.Rmd
│   └── 2015-07-24-bye-world
│       └── index.Rmd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;One could call this bundled file structure &amp;ldquo;tidier&amp;rdquo; 🍱.&lt;/p&gt;
&lt;p&gt;In the above, after serving site, &lt;code&gt;index.html&lt;/code&gt; files also get added to the bundle. In Hugo&amp;rsquo;s terms, these are 
&lt;a href=&#34;https://gohugo.io/content-management/page-bundles/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;leaf bundles&lt;/a&gt;. The resource files allowed in a bundle include page and non-page items like images, pdf, .csv files, etc.&lt;/p&gt;
&lt;p&gt;This is instead of:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;content/
├── about
│   ├── index.md
├── posts
│   ├── 2015-07-23-hi-world.Rmd
│   ├── bakers.csv
│   ├── image1.jpg
│   ├── image2.png
│   └── 2015-07-24-bye-world.Rmd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When you create a new bundled post, the actual content of the post goes in the index file of a page bundle. So:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# not bundled post
post/2015-07-23-hi-world.Rmd
# bundled post
post/2015-07-24-bye-world/index.Rmd
&lt;/code&gt;&lt;/pre&gt;



&lt;h2 id=&#34;bundle-me-blogdown&#34;&gt;Bundle Me, blogdown!&lt;a href=&#34;#bundle-me-blogdown&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;First, read the previous post on setting up a 
&lt;a href=&#34;https://maggie-98.github.io/post/2019-02-19-hugo-netlify-toml/&#34;&gt;netlify.toml file&lt;/a&gt;. Since using Hugo page bundles depends on Hugo v0.32 or higher, you should go ahead and update hugo then update your netlify.toml with your updated version:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;blogdown::update_hugo()
blogdown::hugo_version()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, let&amp;rsquo;s use the 
&lt;a href=&#34;https://usethis.r-lib.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;usethis&lt;/strong&gt; package&lt;/a&gt;.&lt;/p&gt;



&lt;h3 id=&#34;project-specific-rprofile&#34;&gt;Project-specific .Rprofile&lt;a href=&#34;#project-specific-rprofile&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;First, I&amp;rsquo;m going to demo here how to create a project-specific .Rprofile file- but know that you can do a user-level .Rprofile file too.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&amp;quot;usethis&amp;quot;) # uncomment this to install
usethis::edit_r_profile(scope = &amp;quot;project&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These helpful messages &lt;em&gt;should&lt;/em&gt; print to your console: please note the &amp;ldquo;restart&amp;rdquo; reminder&amp;hellip;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; usethis::edit_r_profile(scope = &amp;quot;project&amp;quot;)
● Restart R for changes to take effect
✔ Setting active project to &#39;/Users/alison/rprojs/alison.rbind.io&#39;
● Modify &#39;.Rprofile&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you could add this to your file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# in .Rprofile of the website project
if (file.exists(&amp;quot;~/.Rprofile&amp;quot;)) {
  base::sys.source(&amp;quot;~/.Rprofile&amp;quot;, envir = environment())
}

options(blogdown.new_bundle = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first code chunk above is from the 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/global-options.html#global-options&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blogdown book&lt;/a&gt;, where we describe a workaround for loading both user and project .Rprofile files (since R technically only reads one startup profile file).&lt;/p&gt;
&lt;p&gt;If you don&amp;rsquo;t want this, you could add the blogdown options to your user .Rprofile instead using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;usethis::edit_r_profile(scope = &amp;quot;user&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Heck, while you are at it, you could set a &lt;em&gt;bunch&lt;/em&gt; of options to make your blogdown life easier:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# in .Rprofile of the website project
if (file.exists(&amp;quot;~/.Rprofile&amp;quot;)) {
  base::sys.source(&amp;quot;~/.Rprofile&amp;quot;, envir = environment())
}

options(
  blogdown.author = &amp;quot;Alison Hill&amp;quot;,
  blogdown.ext = &amp;quot;.Rmd&amp;quot;,
  blogdown.subdir = &amp;quot;post&amp;quot;,
  blogdown.yaml.empty = TRUE,
  blogdown.new_bundle = TRUE,
  blogdown.title_case = TRUE
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For the blogdown-specific options, any of these prepopulate content in your &amp;ldquo;New Post&amp;rdquo; Addin (I told you to use this 
&lt;a href=&#34;https://maggie-98.github.io/post/2019-02-19-hugo-archetypes/&#34;&gt;here&lt;/a&gt;). There is a handy 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/global-options.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;table&lt;/a&gt; from the blogdown book, summarized here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;blogdown.author&lt;/code&gt; = author of new posts&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blogdown.ext&lt;/code&gt; = default extension of new posts (can also be &amp;ldquo;.md&amp;rdquo; or &amp;ldquo;.Rmarkdown&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blogdown.subdir&lt;/code&gt; = theme-specific, you need to know your theme and content folder here&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blogdown.yaml.empty&lt;/code&gt; = I told you to do that 
&lt;a href=&#34;https://maggie-98.github.io/post/2019-02-19-hugo-archetypes/&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blogdown.new_bundle&lt;/code&gt; = what this whole post is about!&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blogdown.title_case&lt;/code&gt; = &amp;ldquo;nEed More coFFee&amp;rdquo; &amp;ndash;&amp;gt; &amp;ldquo;Need More Coffee&amp;rdquo; (it tidies all your post titles to title case)&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;the-newline-thing&#34;&gt;The Newline Thing&lt;a href=&#34;#the-newline-thing&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Here is a &lt;strong&gt;massive&lt;/strong&gt; .Rprofile gotcha: this file &lt;strong&gt;must&lt;/strong&gt; end with a blank line. So make sure you add an empty line at the end of the file, then save it, and restart your R session.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;restart-r.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Want to make your general R life easier in the future? Follow Yihui&amp;rsquo;s 
&lt;a href=&#34;https://yihui.name/en/2018/04/rprofile-trailing-newline/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;advice&lt;/a&gt; and do this in RStudio to ensure that all source files end with a newline:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://db.yihui.name/images/rstudio-newline.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;



&lt;h2 id=&#34;use-bundles&#34;&gt;Use Bundles&lt;a href=&#34;#use-bundles&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;After restarting R, try using the &amp;ldquo;New Post&amp;rdquo; Addin, this time &lt;em&gt;with feeling&lt;/em&gt;. There is &lt;em&gt;still&lt;/em&gt; one more gotcha though. Use the Addin to create your new bundled post. The only catch is that once you are looking at your exciting new post, you should &lt;strong&gt;delete the slug&lt;/strong&gt; in the YAML (I posted an issue about this 
&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/370&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The reason is that you want the link to your post to be:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://alison.rbind.io/post/2019-02-21-hugo-page-bundles/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you include the slug, the link to your post will be:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://alison.rbind.io/post/2019-02-21-hugo-page-bundles/hugo-page-bundles&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Another option is to update your &lt;code&gt;config.toml&lt;/code&gt; file with permalinks like 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/configuration.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Yihui suggests&lt;/a&gt; (but beware: this will change all your past links as well, requiring some 
&lt;a href=&#34;https://yihui.name/en/2017/11/301-redirect/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Netlify redirects&lt;/a&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[permalinks]
    post = &amp;quot;/:year/:month/:day/:slug/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The default here from Hugo was &lt;code&gt;/post/:year-:month-:day-:slug/:slug/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A small note: if you want to add relative links from a blog post to another post in your same blog. So &lt;code&gt;[this](/post/2019-02-19-hugo-archetypes/)&lt;/code&gt; becomes 
&lt;a href=&#34;https://maggie-98.github.io/post/2019-02-19-hugo-archetypes/&#34;&gt;this&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now, add images and data files to your ❤️&#39;s content! But you may want to do one more thing&amp;hellip;&lt;/p&gt;



&lt;h2 id=&#34;update-metadata&#34;&gt;Update Metadata&lt;a href=&#34;#update-metadata&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;If you are anything like me, you may draft a blog post then come back to it later. For example, I started this post 2 days ago, but want to publish it today, 2020-12-20. The cool thing that was already built-in to blogdown is the &amp;ldquo;Update Metadata&amp;rdquo; Addin. With your blog post open (it should be called &lt;code&gt;index.Rmd&lt;/code&gt;)^[If no post is open, you will get an error: &lt;code&gt;Warning message: The current document does not seem to contain YAML metadata&lt;/code&gt;], click on Addins and select &amp;ldquo;Update Metadata&amp;rdquo;. You should see a window like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;update-metadata.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Check the box to rename the file if the date has changed. RStudio will tell you your file has been deleted- which is technically true since the folder was renamed, but don&amp;rsquo;t panic!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;file-deleted-warning.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Click YES. The &lt;code&gt;index.Rmd&lt;/code&gt; file that is now open should have an updated date field in the YAML. In your RStudio file viewer, you may want to click on &amp;ldquo;content&amp;rdquo; at this point then navigate back to view your post- then you will then see that the folder name now has an updated date too.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Spoonful of Hugo: The netlify.toml File</title>
      <link>https://maggie-98.github.io/post/2019-02-19-hugo-netlify-toml/</link>
      <pubDate>Wed, 20 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://maggie-98.github.io/post/2019-02-19-hugo-netlify-toml/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Just a spoonful of Hugo helps the blog go down.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;me, only somewhat kidding&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can read the previous post about my &amp;ldquo;Spoonful of Hugo&amp;rdquo; series 
&lt;a href=&#34;https://maggie-98.github.io/post/2019-02-19-hugo-archetypes/&#34;&gt;here&lt;/a&gt;. In this series, I&amp;rsquo;m sharing small spoonfuls of Hugo that I have learned that hopefully can help you get your site &lt;em&gt;UP&lt;/em&gt; (and even better- more efficient, more streamlined, more automated).&lt;/p&gt;
&lt;p&gt;This is my second post in this series, and it is a relatively quick one. Just do this. This one is a no-brainer.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Thanks to &lt;a href=&#34;https://twitter.com/dataandme&#34;&gt;Mara Averick&lt;/a&gt; for alerting me that with Hugo version 0.54.0 and onward, there is a trailing zero at the end of &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5639&#34;&gt;Hugo versions now&lt;/a&gt;. So for versions before 0.54.0, use the format: 0.53; for later versions use 0.54.0 (0.54 will not work).
  &lt;/div&gt;
&lt;/div&gt;



&lt;h2 id=&#34;use-netlify-to-deploy&#34;&gt;Use Netlify to Deploy&lt;a href=&#34;#use-netlify-to-deploy&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;First, you&amp;rsquo;ll need to use Netlify! I am a very happy Netlify user and currently have approximately 33 sites deployed. To setup a new account, navigate to 
&lt;a href=&#34;https://www.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Netlify&lt;/a&gt; and click on the &lt;em&gt;Sign Up&lt;/em&gt; link.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://arm.rbind.io/slides/img/netlify-landing.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Sign up with &lt;em&gt;GitHub&lt;/em&gt; to connect your GitHub and Netlify accounts (as shown below).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;netlify-sign-up.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;If you use a different version control service, select GitLab or BitBucket instead.&lt;/p&gt;
&lt;p&gt;The last step is to use the Netlify UI in browser do &lt;em&gt;New Site from Git&lt;/em&gt; &amp;gt; pick your repo. You&amp;rsquo;ll be prompted to fill in these fields, they are probably already filled in correctly for you:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;netlify-deploy-settings.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The next part is the advanced build settings:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;netlify-adv-build.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;See that &lt;strong&gt;pro tip&lt;/strong&gt; about the netlify.toml? Let&amp;rsquo;s do that! You can leave these fields as is.&lt;/p&gt;



&lt;h2 id=&#34;why-netlifytoml&#34;&gt;Why netlify.toml?&lt;a href=&#34;#why-netlifytoml&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In their 
&lt;a href=&#34;https://www.netlify.com/docs/build-gotchas/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Build Gotchas&lt;/strong&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;If your build works locally, the next debugging step is to ensure the package versions we use to build match yours. You can find the settings for these in the 
&lt;a href=&#34;https://www.netlify.com/docs/build-settings/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Build Settings&lt;/a&gt; doc. That’s the leading cause of build failure.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Yes that is right- package version mismatches are the leading cause of build failure with Netlify. What does this look like for blogdown users? This means that you are running a version of Hugo locally that doesn&amp;rsquo;t match the version that Netlify is using to build your site. Most of the time, you are using a more recent version of Hugo than the one Netlify uses. This means that the files your theme relies on may be using newer Hugo functions that were introduced in later Hugo versions- functions that Netlify won&amp;rsquo;t be able to find working from an older Hugo version. You&amp;rsquo;ll get &lt;em&gt;all the build errors&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;You can check your local Hugo version by running this code in your R console:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;blogdown::hugo_version()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &#39;0.79.0&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, we want Netlify to use this same version of Hugo when it builds your site. You can do this two ways:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Do this in your browser (👎)&lt;/li&gt;
&lt;li&gt;Do this in your project root directory in a netlify.toml file (👍)&lt;/li&gt;
&lt;/ol&gt;



&lt;h2 id=&#34;add-the-netlifytoml-file&#34;&gt;Add the netlify.toml File&lt;a href=&#34;#add-the-netlifytoml-file&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Adding this file means that team members can see for themselves what version of Hugo you are running- if it is buried in the Netlify UI, you can&amp;rsquo;t see that information unless you sift through the public build logs (no thanks). Making the file as plain text in the root of your blogdown project directory means that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;it is version controlled (yay!) and&lt;/li&gt;
&lt;li&gt;other people who use/learn from/contribute to your blog can &lt;em&gt;actually&lt;/em&gt; reproduce your site with the same site configuration.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bonus:&lt;/strong&gt; you can set the Hugo versions for branch deploys too.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is an example from my own 
&lt;a href=&#34;https://github.com/rbind/apreshill/blob/master/netlify.toml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;netlify.toml&lt;/a&gt; file^[the leading zero matters for Hugo versions, so 0.53 works but .53 will not. For versions &amp;gt;= 0.54.0, the trailing zero also matters, so 0.54.0 works but 0.54 will not.]:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[build] 
  publish = &amp;quot;public&amp;quot;
  command = &amp;quot;hugo&amp;quot;

[context.production.environment]
  HUGO_VERSION = &amp;quot;0.54.0&amp;quot; # if older, use format: 0.53 (no trailing zero)
  HUGO_ENV = &amp;quot;production&amp;quot;
  HUGO_ENABLEGITINFO = &amp;quot;true&amp;quot;
  
[context.branch-deploy.environment]
  HUGO_VERSION = &amp;quot;0.54.0&amp;quot; # if older, use format: 0.53 (no trailing zero)

[context.deploy-preview.environment]
  HUGO_VERSION = &amp;quot;0.54.0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can leave off the last two chunk if you don&amp;rsquo;t want to use 
&lt;a href=&#34;https://www.netlify.com/blog/2017/11/16/get-full-control-over-your-deployed-branches/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;branch deploys&lt;/a&gt; or 
&lt;a href=&#34;https://www.netlify.com/blog/2016/07/20/introducing-deploy-previews-in-netlify/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;preview deploys&lt;/a&gt;, but I ❤️ these two Netlify features and encourage you to try them out. I&amp;rsquo;ve starting drafting individual blog posts and tutorials in branches, and then I can see them rendered and share them for feedback without asking collaborators to clone and build the repository locally. It is &lt;strong&gt;lovely&lt;/strong&gt;. Every branch and pull request gets a link 🎉.&lt;/p&gt;
&lt;p&gt;So add this file to your blogdown site repo and push to GitHub.&lt;/p&gt;
&lt;p&gt;Note that, according to the 
&lt;a href=&#34;https://www.netlify.com/docs/netlify-toml-reference/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Netlify docs&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;During a build, the following ordering determines which context covers a particular deploy: UI settings are overridden if a netlify.toml file is present in the root folder of the repo and there exists a setting for the same property/redirect/header in the toml file.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you look in your site&amp;rsquo;s Netlify deploy log, you should see entries like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;7:47:13 PM: Found netlify.toml. Overriding site configuration
7:47:13 PM: Starting build script
7:47:13 PM: Installing dependencies
7:47:14 PM: Started restoring cached node version
7:47:17 PM: Finished restoring cached node version
7:47:18 PM: v8.15.0 is already installed.
7:47:19 PM: Now using node v8.15.0 (npm v6.4.1)
7:47:19 PM: Attempting ruby version 2.3.6, read from environment
7:47:20 PM: Using ruby version 2.3.6
7:47:20 PM: Using PHP version 5.6
7:47:20 PM: Installing Hugo 0.54.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Success!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Spoonful of Hugo: Archetypes</title>
      <link>https://maggie-98.github.io/post/2019-02-19-hugo-archetypes/</link>
      <pubDate>Tue, 19 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://maggie-98.github.io/post/2019-02-19-hugo-archetypes/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Just a spoonful of Hugo helps the blog go down.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;me, only somewhat kidding&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As a happy blogdown user, a common story I hear from other #rstats users is that you try to change one little thing in Hugo, and the whole site breaks. 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Here_be_dragons&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Here be dragons&lt;/a&gt; for folks who aren&amp;rsquo;t web developers.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/e/ea/Carta_Marina.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m here to tell you that there are small spoonfuls of Hugo that can help you get your site &lt;em&gt;UP&lt;/em&gt; (and even better- more efficient, more streamlined, more automated), even if you are not in the least bit interested in transitioning into a career in web development 😏.&lt;/p&gt;



&lt;h2 id=&#34;my-project&#34;&gt;My Project&lt;a href=&#34;#my-project&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The education team at RStudio needs a website and we have a short wishlist:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We want something we can maintain ourselves,&lt;/li&gt;
&lt;li&gt;We want to look consistent with other RStudio sites on the outside, and&lt;/li&gt;
&lt;li&gt;We want to be consistent on the inside so that we can get help if/when we need it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This led me to the current 
&lt;a href=&#34;https://www.tidyverse.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tidyverse.org&lt;/a&gt; blogdown site. I wanted to make a copy of the site then customize for the education team, but I noticed that the 
&lt;a href=&#34;https://github.com/tidyverse/tidyverse.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source code&lt;/a&gt; for the site didn&amp;rsquo;t make it easy for me to copy the &lt;em&gt;structure&lt;/em&gt; of the site and edit only the &lt;em&gt;content&lt;/em&gt; of the site. This is one of the real strengths of Hugo, so I embarked on a learning adventure.&lt;/p&gt;
&lt;center&gt;
&lt;iframe src=&#34;https://giphy.com/embed/VGG8UY1nEl66Y&#34; width=&#34;480&#34; height=&#34;392&#34; frameBorder=&#34;0&#34; class=&#34;giphy-embed&#34; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&#34;https://giphy.com/gifs/adventure-latin-flinch-VGG8UY1nEl66Y&#34;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;p&gt;As a result, I have been living and breathing Hugo lately. As in, my husband now recognizes 
&lt;a href=&#34;https://www.mikedane.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mike Dane&amp;rsquo;s voice&lt;/a&gt;. You may not have have met Mike yet, but he appears in all the video tutorials in the 
&lt;a href=&#34;https://gohugo.io/documentation/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo docs&lt;/a&gt;. His screencasts have been really helpful to me, like this 
&lt;a href=&#34;https://gohugo.io/templates/introduction/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;one on templating&lt;/a&gt;. I&amp;rsquo;ve also spent a lot of time actually reading the 
&lt;a href=&#34;https://gohugo.io/documentation/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;docs&lt;/a&gt; (which are pretty good!), reading posts and answers on the 
&lt;a href=&#34;https://discourse.gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo discourse community site&lt;/a&gt;, and spelunking around inside the actual source code for two very well structured Hugo sites:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The actual 
&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt; site: &lt;a href=&#34;https://github.com/gohugoio/hugoDocs&#34;&gt;https://github.com/gohugoio/hugoDocs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The 
&lt;a href=&#34;https://ropensci.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rOpenSci&lt;/a&gt; site: &lt;a href=&#34;https://github.com/ropensci/roweb2&#34;&gt;https://github.com/ropensci/roweb2&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I&amp;rsquo;ll be using this post and other later posts to share some of the things I&amp;rsquo;ve learned about Hugo along the way. Mainly breadcrumbs to myself, but I hope these help other people too.&lt;/p&gt;
&lt;p&gt;For reference, I&amp;rsquo;m using Hugo via the 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blogdown R package&lt;/a&gt;, and within the 
&lt;a href=&#34;https://www.rstudio.com/products/rstudio/#Desktop&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RStudio IDE&lt;/a&gt;. These are my 
&lt;a href=&#34;https://github.com/rstudio/blogdown&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blogdown&lt;/a&gt; and Hugo versions:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;packageVersion(&amp;quot;blogdown&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &#39;0.21.61&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;blogdown::hugo_version()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &#39;0.79.0&#39;
&lt;/code&gt;&lt;/pre&gt;



&lt;h2 id=&#34;tldr-a-teaspoon-of-archetypes&#34;&gt;tl;dr: A Teaspoon of Archetypes&lt;a href=&#34;#tldr-a-teaspoon-of-archetypes&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Add custom archetypes as &lt;code&gt;.md&lt;/code&gt; files to your project root directory (do &lt;em&gt;not&lt;/em&gt; touch the &lt;code&gt;archetypes&lt;/code&gt; folder in your &lt;code&gt;themes/archetypes&lt;/code&gt; folder).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you don&amp;rsquo;t have that as an empty folder in your project root, make one, then add your archetype files to it.&lt;/li&gt;
&lt;li&gt;If you are making a new blogdown site, I recommend using 
&lt;a href=&#34;https://arm.rbind.io/slides/blogdown.html#start-here&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;these options&lt;/a&gt; to &lt;strong&gt;keep your empty directories&lt;/strong&gt;^[These setup options are newish to the blogdown package: https://github.com/rstudio-education/arm-workshop-rsc2019/issues/8]:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(blogdown)
new_site(theme = &amp;quot;jpescador/hugo-future-imperfect&amp;quot;, 
         sample = TRUE, 
         theme_example = TRUE, 
         empty_dirs = TRUE, # this!
         to_yaml = TRUE)
&lt;/code&gt;&lt;/pre&gt;
 &lt;div class=&#34;figure&#34;&gt;
 &lt;img src=&#34;https://arm.rbind.io/slides/img/blogdown-workflow-wizard.png&#34; alt=&#34;Using the RStudio Project Wizard&#34;  /&gt;
 &lt;p class=&#34;caption&#34;&gt;(\#fig:proj-wizard)Using the RStudio Project Wizard&lt;/p&gt;
 &lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the &amp;ldquo;New Post&amp;rdquo; Addin in RStudio to create &lt;strong&gt;any and all&lt;/strong&gt; new content for your site (not just &lt;em&gt;posts&lt;/em&gt;!). Be sure to use the handy dropdown menu to select from all the possible archetypes. Also, careful about the subdirectory here- some themes use &lt;em&gt;blog&lt;/em&gt;, others use &lt;em&gt;news&lt;/em&gt;, &lt;em&gt;articles&lt;/em&gt;, or &lt;em&gt;posts&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://arm.rbind.io/slides/img/blogdown-newpost-bundle.png&#34; alt=&#34;&#34;&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your archetypes, while only markdown files, &lt;em&gt;can&lt;/em&gt; include R code. When you use the Addin, be sure to choose &lt;code&gt;R Markdown (.Rmd)&lt;/code&gt; as the format so that you can run the code.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Don&amp;rsquo;t miss this 
&lt;a href=&#34;http://lcolladotor.github.io/2018/03/08/blogdown-archetype-template/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;great blog post&lt;/a&gt; by my friend and the great educator 
&lt;a href=&#34;https://twitter.com/fellgernon&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Leo Collado-Torres&lt;/a&gt; on archetypes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;



&lt;h2 id=&#34;a-tablespoon-of-archetypes&#34;&gt;A Tablespoon of Archetypes&lt;a href=&#34;#a-tablespoon-of-archetypes&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;One of the easiest things you can do for yourself is customize your site&amp;rsquo;s archetypes. From the 
&lt;a href=&#34;https://gohugo.io/content-management/archetypes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo docs&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Archetypes are templates used when creating new content.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Right away when I cloned the tidyverse site, I noticed that there were instructions for how to contribute a new article (or blog post) in the 
&lt;a href=&#34;https://github.com/tidyverse/tidyverse.org/blob/c0eb070017cab794029b8ed3ac518f6e1a245a2b/README.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;README.md&lt;/code&gt;&lt;/a&gt; and in a separate 
&lt;a href=&#34;https://github.com/tidyverse/tidyverse.org/blob/c0eb070017cab794029b8ed3ac518f6e1a245a2b/CONTRIBUTING.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; file. Then I noticed this 
&lt;a href=&#34;https://github.com/tidyverse/tidyverse.org/issues/113&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;open GitHub issue&lt;/a&gt; from 
&lt;a href=&#34;https://twitter.com/dataandme&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mara Averick&lt;/a&gt; (the tidyverse developer advocate) titled &amp;ldquo;Fix README/CONTRIBUTING so there&amp;rsquo;s one source of mechanical info?&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;I also noticed that there was no project root folder called &lt;code&gt;archetypes&lt;/code&gt;, which is where you would store your custom site archetype files as &lt;code&gt;.md&lt;/code&gt; files. In fact, there is no &lt;strong&gt;theme&lt;/strong&gt; folder as you might expect either, which is where you could view the default theme archetypes. Let&amp;rsquo;s look at some from other Hugo themes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The default Hugo theme for blogdown, 
&lt;a href=&#34;https://github.com/yihui/hugo-lithium&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lithium&lt;/a&gt;, has just one archetype: 
&lt;a href=&#34;https://github.com/yihui/hugo-lithium/tree/master/archetypes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;default.md&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---
title: &#39;&#39;
date: &#39;&#39;
---
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In contrast, the 
&lt;a href=&#34;https://github.com/gcushen/hugo-academic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo Academic theme&lt;/a&gt; has A LOT: &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/archetypes;&#34;&gt;https://github.com/gcushen/hugo-academic/tree/master/archetypes;&lt;/a&gt; here is the content of the one for new posts:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;+++
title = &amp;quot;{{ replace .Name &amp;quot;-&amp;quot; &amp;quot; &amp;quot; | title }}&amp;quot;
subtitle = &amp;quot;&amp;quot;
   
# Add a summary to display on homepage (optional).
summary = &amp;quot;&amp;quot;
   
date = {{ .Date }}
draft = false
   
# Authors. Comma separated list, e.g. `[&amp;quot;Bob Smith&amp;quot;, &amp;quot;David Jones&amp;quot;]`.
authors = []
   
# Tags and categories
# For example, use `tags = []` for no tags, or the form `tags = [&amp;quot;A Tag&amp;quot;, &amp;quot;Another Tag&amp;quot;]` for one or more tags.
tags = []
categories = []
   
# Projects (optional).
#   Associate this post with one or more of your projects.
#   Simply enter your project&#39;s folder or file name without extension.
#   E.g. `projects = [&amp;quot;deep-learning&amp;quot;]` references 
#   `content/project/deep-learning/index.md`.
#   Otherwise, set `projects = []`.
# projects = [&amp;quot;internal-project&amp;quot;]
   
# Featured image
# To use, add an image named `featured.jpg/png` to your page&#39;s folder. 
[image]
  # Caption (optional)
  caption = &amp;quot;&amp;quot;
   
  # Focal point (optional)
  # Options: Smart, Center, TopLeft, Top, TopRight, Left, Right, BottomLeft, Bottom, BottomRight
  focal_point = &amp;quot;&amp;quot;
+++
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A quick note: you may have noticed differences in both the content between these two files but also the structure. The first is a 
&lt;a href=&#34;https://learnxinyminutes.com/docs/yaml/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;YAML file&lt;/a&gt;, the second is a 
&lt;a href=&#34;https://learnxinyminutes.com/docs/toml/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TOML file&lt;/a&gt;. For blogdown users, you may want to use YAML. This is also why I recommend when you set up your site to use the &lt;code&gt;to_yaml = TRUE&lt;/code&gt; option (in the Project Wizard from figure &lt;a href=&#34;#fig:proj-wizard&#34;&gt;1&lt;/a&gt;, check the &amp;ldquo;Convert all metadata to YAML&amp;rdquo; box; otherwise, the exampleSite will contain TOML instead of YAML)^[If you end up with TOML in your content files, run this R code: &lt;code&gt;hugo_convert(to = &amp;quot;YAML&amp;quot;, unsafe = TRUE)&lt;/code&gt;].&lt;/p&gt;
&lt;p&gt;If you read the original tidyverse 
&lt;a href=&#34;https://github.com/tidyverse/tidyverse.org/blob/c0eb070017cab794029b8ed3ac518f6e1a245a2b/CONTRIBUTING.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; file, the instructions include a fair bit of R code that I would guess means a lot of copying and pasting into new posts. For example, the R Markdown setup chunk and the code for using &lt;code&gt;usethis::use_tidy_thanks()&lt;/code&gt; for package releases. I studied the contributing guidelines, and parsed three different &amp;ldquo;kinds&amp;rdquo; of articles that are commonly contributed, each with a different archetype:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;default.md&lt;/code&gt;- this is just for plain old markdown posts and basically sets up the YAML of the post to be the same as it is now (currently, there is no archetype dictating the content- it is pulling from a project-level 
&lt;a href=&#34;https://github.com/tidyverse/tidyverse.org/blob/master/.Rprofile&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;.Rprofile&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;default-rmarkdown.md&lt;/code&gt; which should only be used with an R Markdown post and provides only the setup chunk at the top.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;package-release.md&lt;/code&gt; which also should only be used with an R Markdown post and adds the &lt;code&gt;usethis::use_tidy_thanks()&lt;/code&gt; code chunk (this is pseudo-code so the default chunk option is set to &lt;code&gt;eval = FALSE&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So I drafted a 
&lt;a href=&#34;https://github.com/tidyverse/tidyverse.org/pull/271&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pull request&lt;/a&gt; that adds 
&lt;a href=&#34;https://github.com/tidyverse/tidyverse.org/pull/271/commits/26a07ae881e57607e25ef0add77d0f5958a9c143&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;these three archetypes&lt;/a&gt; to the 
&lt;a href=&#34;https://github.com/tidyverse/tidyverse.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub repository&lt;/a&gt; for the 
&lt;a href=&#34;https://www.tidyverse.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tidyverse.org&lt;/a&gt;. Here is the &amp;ldquo;after&amp;rdquo; Addin view:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;archetypes-after.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s hoping Hugo archetypes make some things about adding new content to your site easier. There is no Hugo involved, other than realizing that Hugo will look first in your &lt;code&gt;themes/&amp;lt;THEME-NAME&amp;gt;/archetypes/&lt;/code&gt; folder, then in your project root &lt;code&gt;archetypes/&lt;/code&gt; folder next. 
&lt;a href=&#34;https://twitter.com/apreshill/status/1083791211222073344&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DO&lt;/a&gt; 
&lt;a href=&#34;https://twitter.com/apreshill/status/1078494406301212672&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NOT&lt;/a&gt; 
&lt;a href=&#34;https://arm.rbind.io/slides/blogdown.html#35&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TOUCH&lt;/a&gt; any files in your &lt;code&gt;themes/&lt;/code&gt; directory.^[Trust me on this one- if you ever want to update your site this will make that process way harder.]&lt;/p&gt;
&lt;p&gt;You may want to set up archetypes for your blogdown site if you have a &amp;ldquo;signature&amp;rdquo; R setup chunk that loads your preferred &lt;code&gt;knitr&lt;/code&gt; chunk options, common libraries you always load at setup like &lt;code&gt;tidyverse&lt;/code&gt;, &lt;code&gt;ggplot2&lt;/code&gt; themes you prefer (&lt;code&gt;theme_minimal()&lt;/code&gt; FTW), etc. This may be especially helpful if you have multiple team members contributing to a single site and you want their posts to have a uniform setup. Then archetypes can be a real time- and sanity-saver. Get more ideas from Leo&amp;rsquo;s 
&lt;a href=&#34;http://lcolladotor.github.io/2018/03/08/blogdown-archetype-template/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blog post&lt;/a&gt; on archetypes. You &lt;em&gt;can&lt;/em&gt; also make 
&lt;a href=&#34;https://gohugo.io/content-management/archetypes/#directory-based-archetypes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;directory based archetypes&lt;/a&gt; if you use Hugo page bundles, which is a topic of a future post.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Up &amp; Running with blogdown</title>
      <link>https://maggie-98.github.io/post/2017-06-12-up-and-running-with-blogdown/</link>
      <pubDate>Mon, 12 Jun 2017 00:00:00 +0000</pubDate>
      <guid>https://maggie-98.github.io/post/2017-06-12-up-and-running-with-blogdown/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Greetings from the future!&lt;/p&gt;
&lt;p&gt;A lot has changed about blogdown, Hugo, and the Academic theme (now Wowchemy) since the time this post was written.&lt;/p&gt;
&lt;p&gt;An updated tutorial can now be found &lt;a href=&#34;https://maggie-98.github.io/post/new-year-new-blogdown&#34;&gt;here&lt;/a&gt; 🎉&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;h2 id=&#34;read-up-on-blogdown&#34;&gt;Read up on blogdown&lt;a href=&#34;#read-up-on-blogdown&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Before you start, I recommend reading the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;blogdown&lt;/code&gt;: Creating Websites with R Markdown&lt;/a&gt; by Yihui Xie and Amber Thomas&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;http://amber.rbind.io/blog/2016/12/19/creatingsite/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Making a Website Using &lt;code&gt;blogdown&lt;/code&gt;, Hugo, and GitHub pages&lt;/a&gt; also by Amber Thomas&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also found this comment by Eric Nantz, the creator of 
&lt;a href=&#34;http://r-podcast.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the R-Podcast&lt;/a&gt;, in the 
&lt;a href=&#34;https://github.com/rbind/support&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;rbind/support&lt;/code&gt; issues section on GitHub&lt;/a&gt; to be helpful:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/rbind/support/issues/12&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/rbind/support/issues/12&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;h2 id=&#34;caveats-disclaimers-etc&#34;&gt;Caveats, disclaimers, etc.&lt;a href=&#34;#caveats-disclaimers-etc&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Even with all the great resources I listed above, getting myself up and running took a few tries, so in this post I&amp;rsquo;m passing along what ended up working for me. Everyone&amp;rsquo;s mileage may vary, though, depending on your operating system and your approach. About me: I am a macOS user, and I use R, RStudio, Git (usually via 
&lt;a href=&#34;https://about.gitlab.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitLab&lt;/a&gt;, sometimes via 
&lt;a href=&#34;https://github.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;), and terminal regularly, so I&amp;rsquo;m assuming familiarity here with all of these. If that is not you, here are some places to get started:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For Git: 
&lt;a href=&#34;http://happygitwithr.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Happy Git with R&lt;/a&gt; by Jenny Bryan et al.&lt;/li&gt;
&lt;li&gt;For RStudio: 
&lt;a href=&#34;https://www.datacamp.com/courses/working-with-the-rstudio-ide-part-1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DataCamp&amp;rsquo;s Working with the RStudio IDE (free)&lt;/a&gt; by Garrett Grolemund&lt;/li&gt;
&lt;li&gt;For Terminal: 
&lt;a href=&#34;https://github.com/veltman/clmystery&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Command Line Murder Mystery&lt;/a&gt; by Noah Veltman, and 
&lt;a href=&#34;http://seankross.com/the-unix-workbench/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The UNIX Workbench&lt;/a&gt; by Sean Kross&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also have 
&lt;a href=&#34;https://developer.apple.com/xcode/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Xcode&lt;/a&gt; and 
&lt;a href=&#34;https://brew.sh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Homebrew&lt;/a&gt; installed- 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/installation.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;you will probably need these to download Hugo&lt;/a&gt;. If you don&amp;rsquo;t have either but are on a mac, this link may help:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.moncefbelyamani.com/how-to-install-xcode-homebrew-git-rvm-ruby-on-mac/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How to install Xcode, Homebrew, Git, RVM, Ruby &amp;amp; Rails on Mac OS X &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, I did not want to learn more about a lot of things! For instance, the nitty gritty of static site generators and how domain names work. I am a new mom, and just in the process of writing all this up, I filled up my tea mug twice with ice cold water, and filled my water bottle with scalding hot water. So, where offered, I followed the advice of Yihui and Amber. For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/deployment.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;Considering the cost and friendliness to beginners, we currently recommend Netlify.&amp;quot;&lt;/a&gt; Sold.&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/netlify.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;If you are not familiar with domain names or do not want to learn more about them, an option for your consideration is a free subdomain &lt;code&gt;*.rbind.io&lt;/code&gt; offered by RStudio, Inc.&amp;quot;&lt;/a&gt;. Done.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2 id=&#34;in-github&#34;&gt;In GitHub&lt;a href=&#34;#in-github&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;blogdown-signpost-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Go online to your 
&lt;a href=&#34;https://github.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt; account, and create a new repository (check to initialize with a &lt;code&gt;README&lt;/code&gt; but don&amp;rsquo;t add &lt;code&gt;.gitignore&lt;/code&gt;- this will be taken care of later). For naming your repo, consider your future deployment plan:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you are going to use 
&lt;a href=&#34;https://www.netlify.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Netlify&lt;/a&gt; to host the site, you can name this repository anything you want!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    You can see some of the repo names used by members of the &lt;code&gt;rbind&lt;/code&gt; organization &lt;a href=&#34;https://github.com/rbind/repositories&#34;&gt;here&lt;/a&gt;.
  &lt;/div&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;* If you want to host your site as a [GitHub Page](https://pages.github.com), you should name your repository `yourgithubusername.github.io` (so mine would have been `apreshill.github.io`). If you are going this route, I suggest you follow [Amber&#39;s instructions](https://proquestionasker.github.io/blog/Making_Site/) instead of mine!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;github-new-repo.png&#34; alt=&#34;Screenshot above: Creating a new repository in GitHub&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;Go to the main page of your new repository, and under the repository name, click the green &lt;strong&gt;Clone or download&lt;/strong&gt; button.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the &lt;strong&gt;Clone with HTTPs&lt;/strong&gt; section, click on the clipboard icon to copy the clone URL for your new repository. You&amp;rsquo;ll paste this text into terminal in the next section.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;



&lt;h2 id=&#34;in-terminal&#34;&gt;In terminal&lt;a href=&#34;#in-terminal&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;blogdown-signpost-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now you will 
&lt;a href=&#34;https://help.github.com/articles/cloning-a-repository/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;clone your remote repository&lt;/a&gt; and create a local copy on your computer so you can sync between the two locations (using terminal or your alternative command line tool for a Windows machine).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;cd&lt;/code&gt; to navigate into the directory where you want your repo to be&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once there, type: &lt;code&gt;git clone [paste]&lt;/code&gt;. So my command looked like this:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/apreshill/apreshill.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And this is what printed to my terminal window:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Cloning into &#39;apreshill&#39;...
remote: Counting objects: 3, done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
Checking connectivity... done.
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Close terminal, you are done in there.&lt;/li&gt;
&lt;/ol&gt;



&lt;h2 id=&#34;in-rstudio&#34;&gt;In RStudio&lt;a href=&#34;#in-rstudio&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;blogdown-signpost-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;code&gt;blogdown&lt;/code&gt; from your RStudio console. If you already have &lt;code&gt;devtools&lt;/code&gt; installed like I did, you can just use the second line below:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;if (!requireNamespace(&amp;quot;devtools&amp;quot;)) install.packages(&amp;quot;devtools&amp;quot;)
devtools::install_github(&amp;quot;rstudio/blogdown&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Install Hugo using the &lt;code&gt;blogdown&lt;/code&gt; package helper function:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;blogdown::install_hugo()
# or
library(blogdown)
install_hugo()
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    This is where my instructions diverge from Ed&amp;rsquo;s- he states that &lt;code&gt;blogdown&lt;/code&gt; won&amp;rsquo;t create a website in your root folder because the &lt;code&gt;README.md&lt;/code&gt; file is already there. I didn&amp;rsquo;t find that to be the case- I tested this with a new site as well. If one way doesn&amp;rsquo;t work for you, try the other!
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Use the top menu buttons in RStudio to select &lt;code&gt;File -&amp;gt; New Project -&amp;gt; Existing Directory&lt;/code&gt;, then browse to the directory on your computer where your GitHub repo is and click on the &lt;strong&gt;Create Project&lt;/strong&gt; button.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;r-project-existing-directory.png&#34; alt=&#34;Screenshot above: Creating a new project in an existing directory in RStudio&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Now you should be &amp;ldquo;in&amp;rdquo; your project in RStudio. If you are using git for version control, edit your &lt;code&gt;*gitignore&lt;/code&gt; file. This file should be viewable in your file viewer pane in RStudio. Below is what it should look like: the first four lines will automatically be in this file if you have set up your RStudio Project, but if you plan to use Netlify to deploy, you need to add the &lt;code&gt;public/&lt;/code&gt; line (
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/version-control.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;read about here&lt;/a&gt;.)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;.Rproj.user
.Rhistory
.RData
.Ruserdata
blogdown
.DS_Store # if a windows user, Thumbs.db instead
public/ # if using Netlify
&lt;/code&gt;&lt;/pre&gt;



&lt;h2 id=&#34;build-your-site-in-rstudio&#34;&gt;Build your site in RStudio&lt;a href=&#34;#build-your-site-in-rstudio&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;blogdown-signpost-4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now you can finally build your site using the &lt;code&gt;blogdown::new_site()&lt;/code&gt; function. But &lt;strong&gt;first&lt;/strong&gt; you should at least think about themes&amp;hellip;&lt;/p&gt;



&lt;h3 id=&#34;picking-a-theme&#34;&gt;Picking a theme&lt;a href=&#34;#picking-a-theme&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;There are over 90 
&lt;a href=&#34;https://themes.gohugo.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo themes&lt;/a&gt;. So I went back to the &lt;code&gt;blogdown&lt;/code&gt; book. Thankfully, Yihui and Amber offer 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/other-themes.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;to save you some time, we list a few themes below that match our taste&amp;hellip;&amp;quot;&lt;/a&gt;. Huzzah- I went with 
&lt;a href=&#34;https://github.com/gcushen/hugo-academic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hugo-academic&lt;/a&gt;! Whatever theme you choose, you&amp;rsquo;ll need to pick one of 3 ways to make your new site:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If you are happy with the default theme, which is the lithium theme, you can use:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;blogdown::new_site() # default theme is lithium
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;If you want a theme other than the default, you can specify the theme at the same time as you call the &lt;code&gt;new_site&lt;/code&gt; function:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# for example, create a new site with the academic theme
blogdown::new_site(theme = &amp;quot;gcushen/hugo-academic&amp;quot;, theme_example = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;If instead you want to add the theme later (like I did, because I didn&amp;rsquo;t see the above example until it was too late!), you can do this:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;library(blogdown)
new_site() # default theme is lithium
# need to stop serving so can use the console again
install_theme(&amp;quot;gcushen/hugo-academic&amp;quot;, theme_example = TRUE, update_config = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Now is a good time to re-read about &lt;code&gt;blogdown::serve_site()&lt;/code&gt; and &lt;a href=&#34;https://bookdown.org/yihui/blogdown/a-quick-example.html&#34;&gt;how &lt;em&gt;LiveReload&lt;/em&gt; works&lt;/a&gt; (and how it blocks your R console by default)
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;I recommend setting &lt;code&gt;theme_example = TRUE&lt;/code&gt;- some themes won&amp;rsquo;t provide an example site, but the academic theme did and I found it helpful to see. You can always delete the example content.&lt;/p&gt;



&lt;h3 id=&#34;update-project-options&#34;&gt;Update project options&lt;a href=&#34;#update-project-options&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;In your project in RStudio, go to the top menu bar of RStudio and select &lt;code&gt;Tools -&amp;gt; Project Options&lt;/code&gt; and update following 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/rstudio-ide.html#fig:project-options&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Yihui and Amber&amp;rsquo;s instructions&lt;/a&gt;.&lt;/p&gt;



&lt;h3 id=&#34;edit-your-configurations&#34;&gt;Edit your configurations&lt;a href=&#34;#edit-your-configurations&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Relevant reading:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/configuration.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;blogdown&lt;/code&gt; book chapter on configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://proquestionasker.github.io/blog/Making_Site/#site-configuration&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Additional detail from Amber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;You can also view 
&lt;a href=&#34;https://github.com/apreshill/apreshill/blob/master/config.toml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;my &lt;code&gt;config.toml&lt;/code&gt; file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, edit the &lt;code&gt;baseurl&lt;/code&gt; in your &lt;code&gt;config.toml&lt;/code&gt; file. The URL &lt;em&gt;should always&lt;/em&gt; end with a &lt;code&gt;/&lt;/code&gt; trailing slash. At this point, you probably haven&amp;rsquo;t deployed your site yet, so to view it locally you can use the &lt;strong&gt;Serve Site&lt;/strong&gt; add-in, or run the &lt;code&gt;blogdown::serve_site&lt;/code&gt; function. Both of these baseurls worked for me when viewing locally:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;https://example.com/&amp;quot;
baseurl = &amp;quot;/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    Make sure that the &lt;code&gt;baseurl = &lt;/code&gt; listed ends with a trailing slash &lt;code&gt;/&lt;/code&gt;!
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Go ahead and edit all the other elements in the &lt;code&gt;config.toml&lt;/code&gt; file now as you please- this is how you personalize your site!&lt;/p&gt;



&lt;h3 id=&#34;addins--workflow&#34;&gt;Addins &amp;amp; workflow&lt;a href=&#34;#addins--workflow&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Relevant reading:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/rstudio-ide.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;blogdown&lt;/code&gt; book chapter on the RStudio IDE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Addins: use them- you won&amp;rsquo;t need the &lt;code&gt;blogdown&lt;/code&gt; library loaded in the console if you use the Addins. My workflow in RStudio at this point (again, just viewing locally because we haven&amp;rsquo;t deployed yet) works best like this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open the RStudio project for the site&lt;/li&gt;
&lt;li&gt;Use the &lt;strong&gt;Serve Site&lt;/strong&gt; add-in (only once due to the magic of &lt;em&gt;LiveReload&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;View site in the RStudio viewer pane, and open in a new browser window while I work&lt;/li&gt;
&lt;li&gt;Select existing files to edit using the file pane in RStudio&lt;/li&gt;
&lt;li&gt;After making changes, click the save button (don&amp;rsquo;t &lt;code&gt;knit&lt;/code&gt;!)- the console will reload, the viewer pane will update, and if you hit refresh in the browser your local view will also be updated&lt;/li&gt;
&lt;li&gt;When happy with changes, add/commit/push changes to GitHub&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Having &lt;code&gt;blogdown::serve_site&lt;/code&gt; running locally with &lt;em&gt;LiveReload&lt;/em&gt; is especially useful as you can immediately see if you have totally screwed up. For example, in editing my &lt;code&gt;about.md&lt;/code&gt; file, this error popped up in my console after making a change and I was able to fix the error right away:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Started building sites ...
ERROR 2017/06/08 16:22:34 failed to parse page metadata for home/about.md: (18, 6): missing comma
Error: Error building site: Errors reading pages: Error: failed to parse page metadata for home/about.md: (18, 6): missing comma for about.md
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The above workflow is only for editing existing files or posts, but not for &lt;strong&gt;creating new posts&lt;/strong&gt;. For that, read on&amp;hellip;&lt;/p&gt;



&lt;h3 id=&#34;posting&#34;&gt;Posting&lt;a href=&#34;#posting&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Relevant reading:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/rstudio-ide.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;blogdown&lt;/code&gt; book chapter on RStudio IDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/output-format.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;blogdown&lt;/code&gt; book chapter on output formats&lt;/a&gt;: on .md versus .Rmd posts&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://proquestionasker.github.io/blog/Making_Site/#adding-a-blog-post-or-portfolio-piece&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Additional detail from Amber&lt;/a&gt; on adding a blog post&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bottom line:&lt;/p&gt;
&lt;p&gt;Use the &lt;strong&gt;New Post&lt;/strong&gt; addin. But, you need the console to do this, so you have to stop &lt;code&gt;blogdown::serve_site&lt;/code&gt; by clicking on the red &lt;strong&gt;Stop&lt;/strong&gt; button first. The Addin is a Shiny interface that runs this code in your console: &lt;code&gt;blogdown:::new_post_addin()&lt;/code&gt;. So, your console needs to be unblocked for it to run. You also need to be &amp;ldquo;in&amp;rdquo; your RStudio project or it won&amp;rsquo;t work.&lt;/p&gt;



&lt;h3 id=&#34;draft-posts&#34;&gt;Draft posts&lt;a href=&#34;#draft-posts&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Relevant reading:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/local-preview.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;blogdown&lt;/code&gt; book chapter on building a website for local preview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Whether you do a markdown or R Markdown post (see below), you should know that in the YAML front matter of your new file, you can add &lt;code&gt;draft: TRUE&lt;/code&gt; and you will be able to preview your post using &lt;code&gt;blogdown::serve_site()&lt;/code&gt;, but conveniently your post will not show up on your deployed site until you set it to false. Because this is a function built into Hugo, all posts (draft or not) will still end up in your GitHub repo though.&lt;/p&gt;



&lt;h3 id=&#34;new-markdown-posts&#34;&gt;New markdown posts&lt;a href=&#34;#new-markdown-posts&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Pick one of 2 methods:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Use the &lt;strong&gt;New Post&lt;/strong&gt; addin and with the radio button at the bottom select &lt;strong&gt;Format: Markdown&lt;/strong&gt; (recommended)&lt;/li&gt;
&lt;li&gt;Use the console to author a new &lt;code&gt;.md&lt;/code&gt; post:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;blogdown::new_post()
blogdown::new_post(ext = &#39;.md&#39;) # md is the default!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here are the &lt;code&gt;?new_post&lt;/code&gt; arguments:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;new_post(title, kind = &amp;quot;&amp;quot;, open = interactive(),
    author = getOption(&amp;quot;blogdown.author&amp;quot;), categories = NULL, tags = NULL,
    date = Sys.Date(), file = NULL, slug = NULL,
    title_case = getOption(&amp;quot;blogdown.title_case&amp;quot;),
    subdir = getOption(&amp;quot;blogdown.subdir&amp;quot;, &amp;quot;post&amp;quot;),
    ext = getOption(&amp;quot;blogdown.ext&amp;quot;, &amp;quot;.md&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Remember to use the &lt;strong&gt;Serve Site&lt;/strong&gt; addin again so that you can immediately view your changes with every save using &lt;em&gt;LiveReload&lt;/em&gt;.
  &lt;/div&gt;
&lt;/div&gt;



&lt;h3 id=&#34;new-r-markdown-rmd-posts&#34;&gt;New R Markdown (.Rmd) posts&lt;a href=&#34;#new-r-markdown-rmd-posts&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Again, you have your choice of one of 2 methods:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Use the &lt;strong&gt;New Post&lt;/strong&gt; addin and with the radio button at the bottom select &lt;strong&gt;Format: R Markdown (.Rmd)&lt;/strong&gt; (recommended)&lt;/li&gt;
&lt;li&gt;Use the console to author a new &lt;code&gt;.Rmd&lt;/code&gt; post:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;blogdown::new_post(ext = &#39;.Rmd&#39;) # md is the default!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After you edit your &lt;code&gt;.Rmd&lt;/code&gt; post, in addition to saving the changes in your &lt;code&gt;.Rmd&lt;/code&gt; file, you &lt;em&gt;must&lt;/em&gt; use &lt;code&gt;blogdown::serve_site&lt;/code&gt;- this is how the output &lt;code&gt;html&lt;/code&gt; file needs to be generated.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    Do &lt;em&gt;not&lt;/em&gt; knit your &lt;code&gt;.Rmd&lt;/code&gt; posts- use &lt;code&gt;blogdown::serve_site&lt;/code&gt; instead. If you happen to hit the knit button, just &lt;strong&gt;Serve Site&lt;/strong&gt; again to rewrite the &lt;code&gt;.html&lt;/code&gt; file.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Ultimately, your 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/output-format.html#output-format&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;YAML front matter looks something like this&lt;/a&gt;; note that some but not all features of &lt;code&gt;rmarkdown::html_document&lt;/code&gt; 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/output-format.html#fn15&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;are supported in &lt;code&gt;blogdown&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
title: &amp;quot;My Awesome Post&amp;quot;
author: &amp;quot;John Doe&amp;quot;
date: &amp;quot;2017-02-14&amp;quot;
output:
  blogdown::html_page:
    toc: true
    toc_depth: 1
    number_sections: true
    fig_width: 6
---
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Remember to use the &lt;strong&gt;Serve Site&lt;/strong&gt; addin again so that you can immediately view your changes with every save using &lt;em&gt;LiveReload&lt;/em&gt; and your &lt;code&gt;.html&lt;/code&gt; file is properly output.
  &lt;/div&gt;
&lt;/div&gt;



&lt;h3 id=&#34;adding-images-to-a-post&#34;&gt;Adding images to a post&lt;a href=&#34;#adding-images-to-a-post&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;If you want to include an image that is not a figure created from an R chunk, the 
&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/45&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;recommended method&lt;/a&gt; is to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add the image to your &lt;code&gt;/static/img/&lt;/code&gt; folder, then&lt;/li&gt;
&lt;li&gt;Reference the image using the relative file path as follows:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;![my-image](/img/my-image.png)
&lt;/code&gt;&lt;/pre&gt;



&lt;h2 id=&#34;deploy-in-netlify&#34;&gt;Deploy in Netlify&lt;a href=&#34;#deploy-in-netlify&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;blogdown-signpost-5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Deploying in Netlify through GitHub is smooth. Yihui and Amber give some 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/deployment.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;beginner instructions&lt;/a&gt;, but Netlify is so easy, I recommend that you skip dragging your &lt;code&gt;public&lt;/code&gt; folder in and instead 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/netlify.html#netlify&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;automate the process through GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;When you are ready to deploy, commit your changes and push to GitHub, then go online to 
&lt;a href=&#34;https://www.netlify.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Netlify&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on the &lt;strong&gt;Sign Up&lt;/strong&gt; button and sign up using your existing GitHub account (no need to create another account)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Log in, and select: &lt;code&gt;New site from Git -&amp;gt; Continuous Deployment: GitHub&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;From there, Netlify will allow you to select from your existing GitHub repositories. You&amp;rsquo;ll pick the repo you&amp;rsquo;ve been working from with &lt;code&gt;blogdown&lt;/code&gt;, then you&amp;rsquo;ll configure your build. This involves specifying two important things: the build command and the publish directory (this should be &lt;code&gt;public&lt;/code&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;More about the build command from 
&lt;a href=&#34;https://www.netlify.com/docs/continuous-deployment/#common-configuration-directives&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Netlify&lt;/a&gt;: &lt;em&gt;&amp;ldquo;For Hugo hosting, &lt;code&gt;hugo&lt;/code&gt; will build and deploy with the version 0.17 of &lt;code&gt;hugo&lt;/code&gt;. You can specify a specific &lt;code&gt;hugo&lt;/code&gt; release like this: &lt;code&gt;hugo_0.15&lt;/code&gt;. Currently &lt;code&gt;0.13&lt;/code&gt;, &lt;code&gt;0.14&lt;/code&gt;, &lt;code&gt;0.15&lt;/code&gt;, &lt;code&gt;0.16&lt;/code&gt;, &lt;code&gt;0.17&lt;/code&gt;, &lt;code&gt;0.18&lt;/code&gt; and &lt;code&gt;0.19&lt;/code&gt; are supported. For version &lt;code&gt;0.20&lt;/code&gt; and above, you’ll need to create a Build environment variable called &lt;code&gt;HUGO_VERSION&lt;/code&gt; and set it to the version of your choice.&amp;quot;&lt;/em&gt; I opted for the former, and specified &lt;code&gt;hugo_0.19&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You can check your &lt;code&gt;hugo&lt;/code&gt; version in terminal using the command 
&lt;a href=&#34;https://gohugo.io/overview/quickstart/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;hugo version&lt;/code&gt;&lt;/a&gt;. This is what my output looked like, so I could run version &lt;code&gt;0.20&lt;/code&gt; if I wanted to through Netlify, but I went with &lt;code&gt;0.19&lt;/code&gt; and it works just fine.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo version
Hugo Static Site Generator v0.20.7 darwin/amd64 BuildDate: 2017-05-08T18:37:40-07:00
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;netlify-build-settings.png&#34; alt=&#34;Screenshot above: Basic build settings in Netlify&#34;&gt;&lt;/p&gt;
&lt;p&gt;Netlify will deploy your site and assign you a random subdomain name of the form &lt;code&gt;random-word-12345.netlify.com&lt;/code&gt;. Mine was particularly unfortunate, with the random word &lt;code&gt;garbage-collector-janice&lt;/code&gt;. You should know that you can change this; I changed mine to &lt;code&gt;apreshill.netlify.com&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Anytime you change your subdomain name, you need to update the &lt;code&gt;baseurl&lt;/code&gt; in your &lt;code&gt;config.toml&lt;/code&gt; file (so I changed mine to baseurl = &amp;ldquo;&lt;a href=&#34;https://apreshill.netlify.com/%22)&#34;&gt;https://apreshill.netlify.com/&amp;quot;)&lt;/a&gt;.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;At this point, you should be up and running with &lt;code&gt;blogdown&lt;/code&gt;, GitHub, and Netlify, but here are some ideas if you want to go further&amp;hellip;&lt;/p&gt;



&lt;h2 id=&#34;going-further&#34;&gt;Going further&lt;a href=&#34;#going-further&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;custom-css&#34;&gt;Custom CSS&lt;a href=&#34;#custom-css&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I like to tinker with default theme settings like colors and fonts. Every Hugo theme is structured a little differently, but if you are interested, you can check out 
&lt;a href=&#34;https://github.com/apreshill/apreshill/blob/master/static/css/blue.css&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;my custom css&lt;/a&gt; to see how I customized the academic theme, which provides a way to link to a custom CSS file in the &lt;code&gt;config.toml&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  # Link custom CSS and JS assets
  #   (relative to /static/css and /static/js respectively)
  custom_css = [&amp;quot;blue.css&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;formspree&#34;&gt;Formspree&lt;a href=&#34;#formspree&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I used 
&lt;a href=&#34;https://formspree.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Formspree&lt;/a&gt; to make a contact form, which is an online service (managed on 
&lt;a href=&#34;https://github.com/formspree/formspree&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;) that allows you to add an HTML form to your static site. No registration, just use the form and confirm your email address once. I added the following code into 
&lt;a href=&#34;https://github.com/apreshill/apreshill/blob/master/themes/hugo-academic/layouts/partials/widgets/contact.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;my contact widget&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;form action=&amp;quot;https://formspree.io/your@email.com&amp;quot; method=&amp;quot;POST&amp;quot;&amp;gt;
  &amp;lt;label for=&amp;quot;name&amp;quot;&amp;gt;Your name: &amp;lt;/label&amp;gt;
  &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;name&amp;quot; required=&amp;quot;required&amp;quot; placeholder=&amp;quot;here&amp;quot;&amp;gt;&amp;lt;br&amp;gt;
  &amp;lt;label for=&amp;quot;email&amp;quot;&amp;gt;Your email: &amp;lt;/label&amp;gt;
  &amp;lt;input type=&amp;quot;email&amp;quot; name=&amp;quot;_replyto&amp;quot; required=&amp;quot;required&amp;quot; placeholder=&amp;quot;here&amp;quot;&amp;gt;&amp;lt;br&amp;gt;
  &amp;lt;label for=&amp;quot;message&amp;quot;&amp;gt;Your message:&amp;lt;/label&amp;gt;&amp;lt;br&amp;gt;
  &amp;lt;textarea rows=&amp;quot;4&amp;quot; name=&amp;quot;message&amp;quot; id=&amp;quot;message&amp;quot; required=&amp;quot;required&amp;quot; class=&amp;quot;form-control&amp;quot; placeholder=&amp;quot;I can&#39;t wait to read this!&amp;quot;&amp;gt;&amp;lt;/textarea&amp;gt;
  &amp;lt;input type=&amp;quot;hidden&amp;quot; name=&amp;quot;_next&amp;quot; value=&amp;quot;/html/thanks.html&amp;quot; /&amp;gt;
  &amp;lt;input type=&amp;quot;submit&amp;quot; value=&amp;quot;Send&amp;quot; name=&amp;quot;submit&amp;quot; class=&amp;quot;btn btn-primary btn-outline&amp;quot;&amp;gt;
  &amp;lt;input type=&amp;quot;hidden&amp;quot; name=&amp;quot;_subject&amp;quot; value=&amp;quot;Website message&amp;quot; /&amp;gt;
  &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;_gotcha&amp;quot; style=&amp;quot;display:none&amp;quot; /&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;rbindio-domain-names&#34;&gt;&lt;code&gt;*.rbind.io&lt;/code&gt; domain names&lt;a href=&#34;#rbindio-domain-names&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;You may want a different 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/domain-name.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;domain name&lt;/a&gt; than the one provided by Netlify. I opted for a free subdomain &lt;code&gt;*.rbind.io&lt;/code&gt; offered by RStudio. To do the same, head over to the 
&lt;a href=&#34;https://github.com/rbind/support/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rbind/support GitHub page&lt;/a&gt; and open a new issue. All you need to do is let them know what your Netlify subdomain name is (&lt;code&gt;*.netlify.com&lt;/code&gt;), and what you want your subdomain name to be (&lt;code&gt;*.rbind.io&lt;/code&gt;). The 
&lt;a href=&#34;https://support.rbind.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;awesome &lt;code&gt;rbind&lt;/code&gt; support team&lt;/a&gt; will help you take it from there!&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Again, you will need to update the &lt;code&gt;baseurl&lt;/code&gt; in your &lt;code&gt;config.toml&lt;/code&gt; file to reflect your new rbind subdomain name (so mine is baseurl = &amp;ldquo;&lt;a href=&#34;https://alison.rbind.io/%22)&#34;&gt;https://alison.rbind.io/&amp;quot;)&lt;/a&gt;.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;rbind.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;



&lt;h2 id=&#34;have-fun&#34;&gt;Have fun!&lt;a href=&#34;#have-fun&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
&lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
&lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Lastly, don&amp;rsquo;t forget to just have fun with it. Happy &lt;code&gt;blogdown&lt;/code&gt;ing!&lt;/p&gt;
&lt;iframe src=&#34;https://giphy.com/embed/13Y6LAZJqRspI4&#34; width=&#34;480&#34; height=&#34;357&#34; frameBorder=&#34;0&#34; class=&#34;giphy-embed&#34; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&#34;https://giphy.com/gifs/dancing-seinfeld-elaine-benes-13Y6LAZJqRspI4&#34;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
